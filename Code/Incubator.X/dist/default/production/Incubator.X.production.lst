

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 08 14:44:18 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307                           
   308                           	psect	idataBANK0
   309  06B2                     __pidataBANK0:
   310                           
   311                           ;initializer for _flag
   312  06B2  3401               	retlw	1
   313  06B3  3400               	retlw	0
   314  0018                     _RCSTA	set	24
   315  0009                     _PORTE	set	9
   316  0007                     _PORTC	set	7
   317  0006                     _PORTB	set	6
   318  0008                     _PORTD	set	8
   319  0005                     _PORTA	set	5
   320  000B                     _INTCON	set	11
   321  0010                     _T1CON	set	16
   322  001E                     _ADRESH	set	30
   323  001F                     _ADCON0	set	31
   324  0019                     _TXREG	set	25
   325  0049                     _RE1	set	73
   326  004A                     _RE2	set	74
   327  0048                     _RE0	set	72
   328  0041                     _RD1	set	65
   329  0040                     _RD0	set	64
   330  002B                     _RA3	set	43
   331  0060                     _TMR1IF	set	96
   332  00F9                     _GO	set	249
   333  0064                     _TXIF	set	100
   334  0099                     _SPBRG	set	153
   335  0098                     _TXSTA	set	152
   336  0089                     _TRISE	set	137
   337  0087                     _TRISC	set	135
   338  0086                     _TRISB	set	134
   339  0088                     _TRISD	set	136
   340  0085                     _TRISA	set	133
   341  008C                     _PIE1	set	140
   342  009E                     _ADRESL	set	158
   343  009F                     _ADCON1	set	159
   344  0189                     _ANSELH	set	393
   345  0188                     _ANSEL	set	392
   346                           
   347                           	psect	strings
   348  0322                     __pstrings:
   349  0322                     stringtab:
   350  0322                     __stringtab:
   351                           
   352                           ;	String table - string pointers are 1 byte each
   353  0322  1BFF               	btfsc	btemp+1,7
   354  0323  2B2C               	ljmp	stringcode
   355  0324  1383               	bcf	3,7
   356  0325  187F               	btfsc	btemp+1,0
   357  0326  1783               	bsf	3,7
   358  0327  0800               	movf	0,w
   359  0328  0A84               	incf	4,f
   360  0329  1903               	skipnz
   361  032A  0AFF               	incf	btemp+1,f
   362  032B  0008               	return
   363  032C                     stringcode:
   364  032C                     stringdir:
   365  032C  3003               	movlw	high stringdir
   366  032D  008A               	movwf	10
   367  032E  0804               	movf	4,w
   368  032F  0A84               	incf	4,f
   369  0330  0782               	addwf	2,f
   370  0331                     __stringbase:
   371  0331  3400               	retlw	0
   372  0332                     __end_of__stringtab:
   373  0332                     STR_6:
   374  0332  3441               	retlw	65	;'A'
   375  0333  3454               	retlw	84	;'T'
   376  0334  342B               	retlw	43	;'+'
   377  0335  3443               	retlw	67	;'C'
   378  0336  344D               	retlw	77	;'M'
   379  0337  3447               	retlw	71	;'G'
   380  0338  3453               	retlw	83	;'S'
   381  0339  343D               	retlw	61	;'='
   382  033A  3422               	retlw	34	;'"'
   383  033B  342B               	retlw	43	;'+'
   384  033C  3439               	retlw	57	;'9'
   385  033D  3431               	retlw	49	;'1'
   386  033E  3439               	retlw	57	;'9'
   387  033F  3437               	retlw	55	;'7'
   388  0340  3438               	retlw	56	;'8'
   389  0341  3436               	retlw	54	;'6'
   390  0342  3433               	retlw	51	;'3'
   391  0343  3432               	retlw	50	;'2'
   392  0344  3439               	retlw	57	;'9'
   393  0345  3430               	retlw	48	;'0'
   394  0346  3430               	retlw	48	;'0'
   395  0347  3434               	retlw	52	;'4'
   396  0348  3422               	retlw	34	;'"'
   397  0349  3400               	retlw	0
   398  034A                     STR_8:
   399  034A  3444               	retlw	68	;'D'
   400  034B  3465               	retlw	101	;'e'
   401  034C  3467               	retlw	103	;'g'
   402  034D  345F               	retlw	95	;'_'
   403  034E  3443               	retlw	67	;'C'
   404  034F  3465               	retlw	101	;'e'
   405  0350  346C               	retlw	108	;'l'
   406  0351  3473               	retlw	115	;'s'
   407  0352  3469               	retlw	105	;'i'
   408  0353  3475               	retlw	117	;'u'
   409  0354  3473               	retlw	115	;'s'
   410  0355  3400               	retlw	0
   411  0356                     STR_5:
   412  0356  3441               	retlw	65	;'A'
   413  0357  3454               	retlw	84	;'T'
   414  0358  342B               	retlw	43	;'+'
   415  0359  3443               	retlw	67	;'C'
   416  035A  344D               	retlw	77	;'M'
   417  035B  3447               	retlw	71	;'G'
   418  035C  3446               	retlw	70	;'F'
   419  035D  343D               	retlw	61	;'='
   420  035E  3431               	retlw	49	;'1'
   421  035F  3400               	retlw	0
   422  0360                     STR_9:
   423  0360  3448               	retlw	72	;'H'
   424  0361  3455               	retlw	85	;'U'
   425  0362  344D               	retlw	77	;'M'
   426  0363  3449               	retlw	73	;'I'
   427  0364  3444               	retlw	68	;'D'
   428  0365  3449               	retlw	73	;'I'
   429  0366  3454               	retlw	84	;'T'
   430  0367  3459               	retlw	89	;'Y'
   431  0368  343A               	retlw	58	;':'
   432  0369  3400               	retlw	0
   433  036A                     STR_7:
   434  036A  3454               	retlw	84	;'T'
   435  036B  3445               	retlw	69	;'E'
   436  036C  344D               	retlw	77	;'M'
   437  036D  3450               	retlw	80	;'P'
   438  036E  343A               	retlw	58	;':'
   439  036F  3400               	retlw	0
   440  0370                     STR_3:
   441  0370  346C               	retlw	108	;'l'
   442  0371  3475               	retlw	117	;'u'
   443  0372  3478               	retlw	120	;'x'
   444  0373  3400               	retlw	0
   445  0374                     STR_2:
   446  0374  3452               	retlw	82	;'R'
   447  0375  3448               	retlw	72	;'H'
   448  0376  3400               	retlw	0
   449  0377                     STR_4:
   450  0377  3441               	retlw	65	;'A'
   451  0378  3454               	retlw	84	;'T'
   452  0379  3400               	retlw	0
   453  037A                     STR_1:
   454  037A  3443               	retlw	67	;'C'
   455  037B  3400               	retlw	0
   456  0374                     
   457                           	psect	cinit
   458  0013                     start_initialization:	
   459                           ; #config settings
   460                           
   461  0013                     __initialization:
   462                           
   463                           ; Initialize objects allocated to BANK0
   464  0013  120A  118A  26B2  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   465  0018  00E4               	movwf	__pdataBANK0& (0+127)
   466  0019  120A  118A  26B3  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   467  001E  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   468                           
   469                           ; Clear objects allocated to BANK0
   470  001F  1383               	bcf	3,7	;select IRP bank0
   471  0020  3020               	movlw	low __pbssBANK0
   472  0021  0084               	movwf	4
   473  0022  3046               	movlw	low (__pbssBANK0+38)
   474  0023  120A  118A  26A0   	fcall	clear_ram0
   475                           
   476                           ; Clear objects allocated to COMMON
   477  0026  01FA               	clrf	__pbssCOMMON& (0+127)
   478  0027  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   479  0028  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   480  0029  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   481  002A                     end_of_initialization:	
   482                           ;End of C runtime variable initialization code
   483                           
   484  002A                     __end_of__initialization:
   485  002A  0183               	clrf	3
   486  002B  120A  118A  282E   	ljmp	_main	;jump to C main() function
   487                           
   488                           	psect	bssCOMMON
   489  007A                     __pbssCOMMON:
   490  007A                     _count:
   491  007A                     	ds	2
   492  007C                     _volt:
   493  007C                     	ds	2
   494                           
   495                           	psect	bssBANK0
   496  0020                     __pbssBANK0:
   497  0020                     _out_humidity:
   498  0020                     	ds	2
   499  0022                     _out_temp:
   500  0022                     	ds	2
   501  0024                     _voltage:
   502  0024                     	ds	2
   503  0026                     _light:
   504  0026                     	ds	2
   505  0028                     _temp:
   506  0028                     	ds	2
   507  002A                     _hum:
   508  002A                     	ds	2
   509  002C                     _humidity:
   510  002C                     	ds	10
   511  0036                     _intensity:
   512  0036                     	ds	10
   513  0040                     _temperature:
   514  0040                     	ds	4
   515  0044                     _h_voltage:
   516  0044                     	ds	2
   517                           
   518                           	psect	dataBANK0
   519  0064                     __pdataBANK0:
   520  0064                     _flag:
   521  0064                     	ds	2
   522                           
   523                           	psect	clrtext
   524  06A0                     clear_ram0:	
   525                           ;	Called with FSR containing the base address, and
   526                           ;	W with the last address+1
   527                           
   528  06A0  0064               	clrwdt	;clear the watchdog before getting into this loop
   529  06A1                     clrloop0:
   530  06A1  0180               	clrf	0	;clear RAM location pointed to by FSR
   531  06A2  0A84               	incf	4,f	;increment pointer
   532  06A3  0604               	xorwf	4,w	;XOR with final address
   533  06A4  1903               	btfsc	3,2	;have we reached the end yet?
   534  06A5  3400               	retlw	0	;all done for this memory range, return
   535  06A6  0604               	xorwf	4,w	;XOR again to restore value
   536  06A7  2EA1               	goto	clrloop0	;do the next byte
   537                           
   538                           	psect	cstackCOMMON
   539  0070                     __pcstackCOMMON:
   540  0070                     ?_lcd_initialize:
   541  0070                     ?_gsm_msg:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_lcd_clear:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_transmit_data:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_adc:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_timer1_config:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_timer:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_main:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_lcd_enable:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_lcd_command:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_lcd_data:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_lcd_displayon_cursoron:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_string_rev:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?i1_delay:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     i1delay@ms:	
   581                           ; 1 bytes @ 0x0
   582                           
   583                           
   584                           ; 2 bytes @ 0x0
   585  0070                     	ds	2
   586  0072                     ??i1_delay:
   587                           
   588                           ; 1 bytes @ 0x2
   589  0072                     	ds	1
   590  0073                     i1delay@i:
   591                           
   592                           ; 2 bytes @ 0x3
   593  0073                     	ds	2
   594  0075                     i1delay@j:
   595                           
   596                           ; 2 bytes @ 0x5
   597  0075                     	ds	2
   598  0077                     ??_timer:
   599                           
   600                           ; 1 bytes @ 0x7
   601  0077                     	ds	3
   602                           
   603                           	psect	cstackBANK0
   604  0046                     __pcstackBANK0:
   605  0046                     ?_delay:
   606  0046                     ??_transmit_data:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0046                     ?_transmit_string:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0046                     ??_timer1_config:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0046                     ??_string_rev:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0046                     ?___wmul:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0046                     ?___awmod:	
   622                           ; 2 bytes @ 0x0
   623                           
   624  0046                     transmit_data@a:	
   625                           ; 2 bytes @ 0x0
   626                           
   627  0046                     transmit_string@a:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0046                     delay@ms:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0046                     ___wmul@multiplier:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0046                     ___awmod@divisor:	
   637                           ; 2 bytes @ 0x0
   638                           
   639                           
   640                           ; 2 bytes @ 0x0
   641  0046                     	ds	2
   642  0048                     ??_delay:
   643  0048                     ??_transmit_string:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0048                     ___wmul@multiplicand:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0048                     ___awmod@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652  0048                     string_rev@b:	
   653                           ; 2 bytes @ 0x2
   654                           
   655                           
   656                           ; 10 bytes @ 0x2
   657  0048                     	ds	1
   658  0049                     delay@i:
   659                           
   660                           ; 2 bytes @ 0x3
   661  0049                     	ds	1
   662  004A                     ??___wmul:
   663  004A                     ??___awmod:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  004A                     ___wmul@product:	
   667                           ; 1 bytes @ 0x4
   668                           
   669                           
   670                           ; 2 bytes @ 0x4
   671  004A                     	ds	1
   672  004B                     ___awmod@counter:
   673  004B                     delay@j:	
   674                           ; 1 bytes @ 0x5
   675                           
   676                           
   677                           ; 2 bytes @ 0x5
   678  004B                     	ds	1
   679  004C                     ?___awdiv:
   680  004C                     ___awmod@sign:	
   681                           ; 2 bytes @ 0x6
   682                           
   683  004C                     ___awdiv@divisor:	
   684                           ; 1 bytes @ 0x6
   685                           
   686                           
   687                           ; 2 bytes @ 0x6
   688  004C                     	ds	1
   689  004D                     ??_gsm_msg:
   690  004D                     ??_adc:	
   691                           ; 1 bytes @ 0x7
   692                           
   693  004D                     ??_lcd_enable:	
   694                           ; 1 bytes @ 0x7
   695                           
   696  004D                     ??_lcd_command:	
   697                           ; 1 bytes @ 0x7
   698                           
   699  004D                     ??_lcd_data:	
   700                           ; 1 bytes @ 0x7
   701                           
   702                           
   703                           ; 1 bytes @ 0x7
   704  004D                     	ds	1
   705  004E                     ___awdiv@dividend:
   706                           
   707                           ; 2 bytes @ 0x8
   708  004E                     	ds	1
   709  004F                     lcd_command@a:
   710  004F                     lcd_data@a:	
   711                           ; 1 bytes @ 0x9
   712                           
   713  004F                     adc@a:	
   714                           ; 1 bytes @ 0x9
   715                           
   716                           
   717                           ; 2 bytes @ 0x9
   718  004F                     	ds	1
   719  0050                     ?_lcd_position:
   720  0050                     ?_lcd_string:	
   721                           ; 1 bytes @ 0xA
   722                           
   723  0050                     ??_lcd_clear:	
   724                           ; 1 bytes @ 0xA
   725                           
   726  0050                     ??_lcd_displayon_cursoron:	
   727                           ; 1 bytes @ 0xA
   728                           
   729  0050                     ??___awdiv:	
   730                           ; 1 bytes @ 0xA
   731                           
   732  0050                     lcd_string@a:	
   733                           ; 1 bytes @ 0xA
   734                           
   735  0050                     lcd_position@row:	
   736                           ; 2 bytes @ 0xA
   737                           
   738                           
   739                           ; 2 bytes @ 0xA
   740  0050                     	ds	1
   741  0051                     ___awdiv@counter:
   742  0051                     adc@b:	
   743                           ; 1 bytes @ 0xB
   744                           
   745                           
   746                           ; 2 bytes @ 0xB
   747  0051                     	ds	1
   748  0052                     ??_lcd_string:
   749  0052                     ___awdiv@sign:	
   750                           ; 1 bytes @ 0xC
   751                           
   752  0052                     lcd_position@column:	
   753                           ; 1 bytes @ 0xC
   754                           
   755  0052                     string_rev@j:	
   756                           ; 2 bytes @ 0xC
   757                           
   758                           
   759                           ; 2 bytes @ 0xC
   760  0052                     	ds	1
   761  0053                     adc@output:
   762  0053                     ___awdiv@quotient:	
   763                           ; 2 bytes @ 0xD
   764                           
   765                           
   766                           ; 2 bytes @ 0xD
   767  0053                     	ds	1
   768  0054                     ??_lcd_initialize:
   769  0054                     ??_lcd_position:	
   770                           ; 1 bytes @ 0xE
   771                           
   772  0054                     string_rev@a:	
   773                           ; 1 bytes @ 0xE
   774                           
   775                           
   776                           ; 1 bytes @ 0xE
   777  0054                     	ds	1
   778  0055                     adc@input:
   779  0055                     string_rev@i:	
   780                           ; 1 bytes @ 0xF
   781                           
   782                           
   783                           ; 2 bytes @ 0xF
   784  0055                     	ds	2
   785  0057                     ?_digit_split_a:
   786  0057                     digit_split_a@a:	
   787                           ; 2 bytes @ 0x11
   788                           
   789                           
   790                           ; 2 bytes @ 0x11
   791  0057                     	ds	2
   792  0059                     ??_digit_split_a:
   793                           
   794                           ; 1 bytes @ 0x13
   795  0059                     	ds	2
   796  005B                     digit_split_a@mod:
   797                           
   798                           ; 2 bytes @ 0x15
   799  005B                     	ds	2
   800  005D                     digit_split_a@i:
   801                           
   802                           ; 2 bytes @ 0x17
   803  005D                     	ds	2
   804  005F                     digit_split_a@b:
   805                           
   806                           ; 1 bytes @ 0x19
   807  005F                     	ds	1
   808  0060                     ??_main:
   809                           
   810                           ; 1 bytes @ 0x1A
   811  0060                     	ds	2
   812  0062                     _main$814:
   813                           
   814                           ; 2 bytes @ 0x1C
   815  0062                     	ds	2
   816                           
   817                           	psect	maintext
   818  002E                     __pmaintext:	
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 102 in file "incubator.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  i               2    0        int 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : B00/0
   835 ;;		On exit  : 300/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       2       0       0       0
   840 ;;      Temps:          0       2       0       0       0
   841 ;;      Totals:         0       4       0       0       0
   842 ;;Total ram usage:        4 bytes
   843 ;; Hardware stack levels required when called: 7
   844 ;; This function calls:
   845 ;;		___awdiv
   846 ;;		___wmul
   847 ;;		_adc
   848 ;;		_digit_split_a
   849 ;;		_gsm_msg
   850 ;;		_lcd_clear
   851 ;;		_lcd_initialize
   852 ;;		_lcd_position
   853 ;;		_lcd_string
   854 ;;		_timer1_config
   855 ;; This function is called by:
   856 ;;		Startup code after reset
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _main
   862  002E                     _main:
   863                           
   864                           ;incubator.c: 105:     PORTA=0x00;
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   868  002E  0185               	clrf	5	;volatile
   869                           
   870                           ;incubator.c: 106:     TRISA=0x07;
   871  002F  3007               	movlw	7
   872  0030  1683               	bsf	3,5	;RP0=1, select bank1
   873  0031  0085               	movwf	5	;volatile
   874                           
   875                           ;incubator.c: 107:     ANSEL=0x07;
   876  0032  3007               	movlw	7
   877  0033  1703               	bsf	3,6	;RP1=1, select bank3
   878  0034  0088               	movwf	8	;volatile
   879                           
   880                           ;incubator.c: 108:     PORTD=0x00;
   881  0035  1283               	bcf	3,5	;RP0=0, select bank0
   882  0036  1303               	bcf	3,6	;RP1=0, select bank0
   883  0037  0188               	clrf	8	;volatile
   884                           
   885                           ;incubator.c: 109:     TRISD=0x00;
   886  0038  1683               	bsf	3,5	;RP0=1, select bank1
   887  0039  0188               	clrf	8	;volatile
   888                           
   889                           ;incubator.c: 110:     PORTB=0x00;
   890  003A  1283               	bcf	3,5	;RP0=0, select bank0
   891  003B  0186               	clrf	6	;volatile
   892                           
   893                           ;incubator.c: 111:     TRISB=0x00;
   894  003C  1683               	bsf	3,5	;RP0=1, select bank1
   895  003D  0186               	clrf	6	;volatile
   896                           
   897                           ;incubator.c: 112:     ANSELH=0x00;
   898  003E  1703               	bsf	3,6	;RP1=1, select bank3
   899  003F  0189               	clrf	9	;volatile
   900                           
   901                           ;incubator.c: 113:     PORTC=0x00;
   902  0040  1283               	bcf	3,5	;RP0=0, select bank0
   903  0041  1303               	bcf	3,6	;RP1=0, select bank0
   904  0042  0187               	clrf	7	;volatile
   905                           
   906                           ;incubator.c: 114:     TRISC=0x80;
   907  0043  3080               	movlw	128
   908  0044  1683               	bsf	3,5	;RP0=1, select bank1
   909  0045  0087               	movwf	7	;volatile
   910                           
   911                           ;incubator.c: 115:     PORTE=0x00;
   912  0046  1283               	bcf	3,5	;RP0=0, select bank0
   913  0047  0189               	clrf	9	;volatile
   914                           
   915                           ;incubator.c: 116:     TRISE=0x00;
   916  0048  1683               	bsf	3,5	;RP0=1, select bank1
   917  0049  0189               	clrf	9	;volatile
   918                           
   919                           ;incubator.c: 117:     TXSTA=0x24;
   920  004A  3024               	movlw	36
   921  004B  0098               	movwf	24	;volatile
   922                           
   923                           ;incubator.c: 118:     RCSTA=0x90;
   924  004C  3090               	movlw	144
   925  004D  1283               	bcf	3,5	;RP0=0, select bank0
   926  004E  0098               	movwf	24	;volatile
   927                           
   928                           ;incubator.c: 119:     SPBRG=25;
   929  004F  3019               	movlw	25
   930  0050  1683               	bsf	3,5	;RP0=1, select bank1
   931  0051  0099               	movwf	25	;volatile
   932                           
   933                           ;incubator.c: 120:     lcd_initialize();
   934  0052  120A  118A  263E  120A  118A  	fcall	_lcd_initialize
   935                           
   936                           ;incubator.c: 124:     timer1_config();
   937  0057  120A  118A  268D  120A  118A  	fcall	_timer1_config
   938  005C                     l1604:
   939                           
   940                           ;incubator.c: 127:     {;incubator.c: 128:     temp=adc(0x01);
   941  005C  3001               	movlw	1
   942  005D  120A  118A  24C2  120A  118A  	fcall	_adc
   943  0062  00E0               	movwf	??_main
   944  0063  01E1               	clrf	??_main+1
   945  0064  0860               	movf	??_main,w
   946  0065  00A8               	movwf	_temp
   947  0066  0861               	movf	??_main+1,w
   948  0067  00A9               	movwf	_temp+1
   949                           
   950                           ;incubator.c: 129:     voltage=temp*48;
   951  0068  0829               	movf	_temp+1,w
   952  0069  00C7               	movwf	___wmul@multiplier+1
   953  006A  0828               	movf	_temp,w
   954  006B  00C6               	movwf	___wmul@multiplier
   955  006C  3030               	movlw	48
   956  006D  00C8               	movwf	___wmul@multiplicand
   957  006E  3000               	movlw	0
   958  006F  00C9               	movwf	___wmul@multiplicand+1
   959  0070  120A  118A  25FD  120A  118A  	fcall	___wmul
   960  0075  0847               	movf	?___wmul+1,w
   961  0076  00A5               	movwf	_voltage+1
   962  0077  0846               	movf	?___wmul,w
   963  0078  00A4               	movwf	_voltage
   964                           
   965                           ;incubator.c: 130:     out_temp=voltage/100;
   966  0079  3064               	movlw	100
   967  007A  00CC               	movwf	___awdiv@divisor
   968  007B  3000               	movlw	0
   969  007C  00CD               	movwf	___awdiv@divisor+1
   970  007D  0825               	movf	_voltage+1,w
   971  007E  00CF               	movwf	___awdiv@dividend+1
   972  007F  0824               	movf	_voltage,w
   973  0080  00CE               	movwf	___awdiv@dividend
   974  0081  120A  118A  237C  120A  118A  	fcall	___awdiv
   975  0086  084D               	movf	?___awdiv+1,w
   976  0087  00A3               	movwf	_out_temp+1
   977  0088  084C               	movf	?___awdiv,w
   978  0089  00A2               	movwf	_out_temp
   979                           
   980                           ;incubator.c: 131:     digit_split_a(temperature,out_temp);
   981  008A  0823               	movf	_out_temp+1,w
   982  008B  00D8               	movwf	digit_split_a@a+1
   983  008C  0822               	movf	_out_temp,w
   984  008D  00D7               	movwf	digit_split_a@a
   985  008E  3040               	movlw	(low (_temperature| 0))& (0+255)
   986  008F  120A  118A  23D5  120A  118A  	fcall	_digit_split_a
   987                           
   988                           ;incubator.c: 133:     if(out_temp<=35)
   989  0094  0823               	movf	_out_temp+1,w
   990  0095  3A80               	xorlw	128
   991  0096  00FF               	movwf	127
   992  0097  3080               	movlw	128
   993  0098  027F               	subwf	127,w
   994  0099  1D03               	skipz
   995  009A  289D               	goto	u875
   996  009B  3024               	movlw	36
   997  009C  0222               	subwf	_out_temp,w
   998  009D                     u875:
   999  009D  1803               	skipnc
  1000  009E  28A2               	goto	l134
  1001                           
  1002                           ;incubator.c: 134:     {;incubator.c: 135:         RD0=1;
  1003  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1005  00A1  1408               	bsf	8,0	;volatile
  1006  00A2                     l134:	
  1007                           ;incubator.c: 136:     }
  1008                           
  1009                           
  1010                           ;incubator.c: 137:     if(RD0==1 && out_temp<40)
  1011  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1012  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1013  00A4  1C08               	btfss	8,0	;volatile
  1014  00A5  28B4               	goto	l1620
  1015  00A6  0823               	movf	_out_temp+1,w
  1016  00A7  3A80               	xorlw	128
  1017  00A8  00FF               	movwf	127
  1018  00A9  3080               	movlw	128
  1019  00AA  027F               	subwf	127,w
  1020  00AB  1D03               	skipz
  1021  00AC  28AF               	goto	u895
  1022  00AD  3028               	movlw	40
  1023  00AE  0222               	subwf	_out_temp,w
  1024  00AF                     u895:
  1025  00AF  1803               	skipnc
  1026  00B0  28B4               	goto	l1620
  1027                           
  1028                           ;incubator.c: 138:     {;incubator.c: 139:         RD0=1;
  1029  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00B3  1408               	bsf	8,0	;volatile
  1032  00B4                     l1620:
  1033                           
  1034                           ;incubator.c: 141:     if(out_temp>40)
  1035  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1036  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1037  00B6  0823               	movf	_out_temp+1,w
  1038  00B7  3A80               	xorlw	128
  1039  00B8  00FF               	movwf	127
  1040  00B9  3080               	movlw	128
  1041  00BA  027F               	subwf	127,w
  1042  00BB  1D03               	skipz
  1043  00BC  28BF               	goto	u905
  1044  00BD  3029               	movlw	41
  1045  00BE  0222               	subwf	_out_temp,w
  1046  00BF                     u905:
  1047  00BF  1C03               	skipc
  1048  00C0  28C4               	goto	l1624
  1049                           
  1050                           ;incubator.c: 142:     {;incubator.c: 143:         RD0=0;
  1051  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1052  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1053  00C3  1008               	bcf	8,0	;volatile
  1054  00C4                     l1624:
  1055                           
  1056                           ;incubator.c: 147:     hum=adc(0x05);
  1057  00C4  3005               	movlw	5
  1058  00C5  120A  118A  24C2  120A  118A  	fcall	_adc
  1059  00CA  00E0               	movwf	??_main
  1060  00CB  01E1               	clrf	??_main+1
  1061  00CC  0860               	movf	??_main,w
  1062  00CD  00AA               	movwf	_hum
  1063  00CE  0861               	movf	??_main+1,w
  1064  00CF  00AB               	movwf	_hum+1
  1065                           
  1066                           ;incubator.c: 148:     h_voltage=hum*5;
  1067  00D0  082B               	movf	_hum+1,w
  1068  00D1  00C7               	movwf	___wmul@multiplier+1
  1069  00D2  082A               	movf	_hum,w
  1070  00D3  00C6               	movwf	___wmul@multiplier
  1071  00D4  3005               	movlw	5
  1072  00D5  00C8               	movwf	___wmul@multiplicand
  1073  00D6  3000               	movlw	0
  1074  00D7  00C9               	movwf	___wmul@multiplicand+1
  1075  00D8  120A  118A  25FD  120A  118A  	fcall	___wmul
  1076  00DD  0847               	movf	?___wmul+1,w
  1077  00DE  00C5               	movwf	_h_voltage+1
  1078  00DF  0846               	movf	?___wmul,w
  1079  00E0  00C4               	movwf	_h_voltage
  1080                           
  1081                           ;incubator.c: 150:     out_humidity=(int)(((90*h_voltage)/5)/100);
  1082  00E1  3005               	movlw	5
  1083  00E2  00CC               	movwf	___awdiv@divisor
  1084  00E3  3000               	movlw	0
  1085  00E4  00CD               	movwf	___awdiv@divisor+1
  1086  00E5  0845               	movf	_h_voltage+1,w
  1087  00E6  00C7               	movwf	___wmul@multiplier+1
  1088  00E7  0844               	movf	_h_voltage,w
  1089  00E8  00C6               	movwf	___wmul@multiplier
  1090  00E9  305A               	movlw	90
  1091  00EA  00C8               	movwf	___wmul@multiplicand
  1092  00EB  3000               	movlw	0
  1093  00EC  00C9               	movwf	___wmul@multiplicand+1
  1094  00ED  120A  118A  25FD  120A  118A  	fcall	___wmul
  1095  00F2  0847               	movf	?___wmul+1,w
  1096  00F3  00CF               	movwf	___awdiv@dividend+1
  1097  00F4  0846               	movf	?___wmul,w
  1098  00F5  00CE               	movwf	___awdiv@dividend
  1099  00F6  120A  118A  237C  120A  118A  	fcall	___awdiv
  1100  00FB  084D               	movf	?___awdiv+1,w
  1101  00FC  00E3               	movwf	_main$814+1
  1102  00FD  084C               	movf	?___awdiv,w
  1103  00FE  00E2               	movwf	_main$814
  1104                           
  1105                           ;incubator.c: 150:     out_humidity=(int)(((90*h_voltage)/5)/100);
  1106  00FF  3064               	movlw	100
  1107  0100  00CC               	movwf	___awdiv@divisor
  1108  0101  3000               	movlw	0
  1109  0102  00CD               	movwf	___awdiv@divisor+1
  1110  0103  0863               	movf	_main$814+1,w
  1111  0104  00CF               	movwf	___awdiv@dividend+1
  1112  0105  0862               	movf	_main$814,w
  1113  0106  00CE               	movwf	___awdiv@dividend
  1114  0107  120A  118A  237C  120A  118A  	fcall	___awdiv
  1115  010C  084D               	movf	?___awdiv+1,w
  1116  010D  00A1               	movwf	_out_humidity+1
  1117  010E  084C               	movf	?___awdiv,w
  1118  010F  00A0               	movwf	_out_humidity
  1119                           
  1120                           ;incubator.c: 151:     digit_split_a(humidity,out_humidity);
  1121  0110  0821               	movf	_out_humidity+1,w
  1122  0111  00D8               	movwf	digit_split_a@a+1
  1123  0112  0820               	movf	_out_humidity,w
  1124  0113  00D7               	movwf	digit_split_a@a
  1125  0114  302C               	movlw	(low (_humidity| 0))& (0+255)
  1126  0115  120A  118A  23D5  120A  118A  	fcall	_digit_split_a
  1127                           
  1128                           ;incubator.c: 153:     light=adc(0x09);
  1129  011A  3009               	movlw	9
  1130  011B  120A  118A  24C2  120A  118A  	fcall	_adc
  1131  0120  00E0               	movwf	??_main
  1132  0121  01E1               	clrf	??_main+1
  1133  0122  0860               	movf	??_main,w
  1134  0123  00A6               	movwf	_light
  1135  0124  0861               	movf	??_main+1,w
  1136  0125  00A7               	movwf	_light+1
  1137                           
  1138                           ;incubator.c: 154:     digit_split_a(intensity,light);
  1139  0126  0827               	movf	_light+1,w
  1140  0127  00D8               	movwf	digit_split_a@a+1
  1141  0128  0826               	movf	_light,w
  1142  0129  00D7               	movwf	digit_split_a@a
  1143  012A  3036               	movlw	(low (_intensity| 0))& (0+255)
  1144  012B  120A  118A  23D5  120A  118A  	fcall	_digit_split_a
  1145                           
  1146                           ;incubator.c: 159:     gsm_msg();
  1147  0130  120A  118A  2213  120A  118A  	fcall	_gsm_msg
  1148                           
  1149                           ;incubator.c: 160:     lcd_position(0,0);
  1150  0135  3000               	movlw	0
  1151  0136  00D0               	movwf	lcd_position@row
  1152  0137  00D1               	movwf	lcd_position@row+1
  1153  0138  3000               	movlw	0
  1154  0139  00D2               	movwf	lcd_position@column
  1155  013A  00D3               	movwf	lcd_position@column+1
  1156  013B  120A  118A  265D  120A  118A  	fcall	_lcd_position
  1157                           
  1158                           ;incubator.c: 161:     lcd_string(temperature);
  1159  0140  3040               	movlw	(low (_temperature| 0))& (0+255)
  1160  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0143  00D0               	movwf	lcd_string@a
  1163  0144  3000               	movlw	0
  1164  0145  00D1               	movwf	lcd_string@a+1
  1165  0146  120A  118A  25DA  120A  118A  	fcall	_lcd_string
  1166                           
  1167                           ;incubator.c: 162:     lcd_position(1,0);
  1168  014B  3001               	movlw	1
  1169  014C  00D0               	movwf	lcd_position@row
  1170  014D  3000               	movlw	0
  1171  014E  00D1               	movwf	lcd_position@row+1
  1172  014F  3000               	movlw	0
  1173  0150  00D2               	movwf	lcd_position@column
  1174  0151  00D3               	movwf	lcd_position@column+1
  1175  0152  120A  118A  265D  120A  118A  	fcall	_lcd_position
  1176                           
  1177                           ;incubator.c: 163:     lcd_string("C");
  1178  0157  3049               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1179  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1181  015A  00D0               	movwf	lcd_string@a
  1182  015B  3080               	movlw	128
  1183  015C  00D1               	movwf	lcd_string@a+1
  1184  015D  120A  118A  25DA  120A  118A  	fcall	_lcd_string
  1185                           
  1186                           ;incubator.c: 166:     lcd_position(0,5);
  1187  0162  3000               	movlw	0
  1188  0163  00D0               	movwf	lcd_position@row
  1189  0164  00D1               	movwf	lcd_position@row+1
  1190  0165  3005               	movlw	5
  1191  0166  00D2               	movwf	lcd_position@column
  1192  0167  3000               	movlw	0
  1193  0168  00D3               	movwf	lcd_position@column+1
  1194  0169  120A  118A  265D  120A  118A  	fcall	_lcd_position
  1195                           
  1196                           ;incubator.c: 167:     lcd_string(humidity);
  1197  016E  302C               	movlw	(low (_humidity| 0))& (0+255)
  1198  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0171  00D0               	movwf	lcd_string@a
  1201  0172  3000               	movlw	0
  1202  0173  00D1               	movwf	lcd_string@a+1
  1203  0174  120A  118A  25DA  120A  118A  	fcall	_lcd_string
  1204                           
  1205                           ;incubator.c: 168:     lcd_position(1,5);
  1206  0179  3001               	movlw	1
  1207  017A  00D0               	movwf	lcd_position@row
  1208  017B  3000               	movlw	0
  1209  017C  00D1               	movwf	lcd_position@row+1
  1210  017D  3005               	movlw	5
  1211  017E  00D2               	movwf	lcd_position@column
  1212  017F  3000               	movlw	0
  1213  0180  00D3               	movwf	lcd_position@column+1
  1214  0181  120A  118A  265D  120A  118A  	fcall	_lcd_position
  1215                           
  1216                           ;incubator.c: 169:     lcd_string("RH");
  1217  0186  3043               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1218  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0189  00D0               	movwf	lcd_string@a
  1221  018A  3080               	movlw	128
  1222  018B  00D1               	movwf	lcd_string@a+1
  1223  018C  120A  118A  25DA  120A  118A  	fcall	_lcd_string
  1224                           
  1225                           ;incubator.c: 172:     lcd_position(0,12);
  1226  0191  3000               	movlw	0
  1227  0192  00D0               	movwf	lcd_position@row
  1228  0193  00D1               	movwf	lcd_position@row+1
  1229  0194  300C               	movlw	12
  1230  0195  00D2               	movwf	lcd_position@column
  1231  0196  3000               	movlw	0
  1232  0197  00D3               	movwf	lcd_position@column+1
  1233  0198  120A  118A  265D  120A  118A  	fcall	_lcd_position
  1234                           
  1235                           ;incubator.c: 173:     lcd_string(intensity);
  1236  019D  3036               	movlw	(low (_intensity| 0))& (0+255)
  1237  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1238  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1239  01A0  00D0               	movwf	lcd_string@a
  1240  01A1  3000               	movlw	0
  1241  01A2  00D1               	movwf	lcd_string@a+1
  1242  01A3  120A  118A  25DA  120A  118A  	fcall	_lcd_string
  1243                           
  1244                           ;incubator.c: 174:     lcd_position(1,12);
  1245  01A8  3001               	movlw	1
  1246  01A9  00D0               	movwf	lcd_position@row
  1247  01AA  3000               	movlw	0
  1248  01AB  00D1               	movwf	lcd_position@row+1
  1249  01AC  300C               	movlw	12
  1250  01AD  00D2               	movwf	lcd_position@column
  1251  01AE  3000               	movlw	0
  1252  01AF  00D3               	movwf	lcd_position@column+1
  1253  01B0  120A  118A  265D  120A  118A  	fcall	_lcd_position
  1254                           
  1255                           ;incubator.c: 175:     lcd_string("lux");
  1256  01B5  303F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1257  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1258  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1259  01B8  00D0               	movwf	lcd_string@a
  1260  01B9  3080               	movlw	128
  1261  01BA  00D1               	movwf	lcd_string@a+1
  1262  01BB  120A  118A  25DA  120A  118A  	fcall	_lcd_string
  1263                           
  1264                           ;incubator.c: 177:     lcd_clear();
  1265  01C0  120A  118A  26AD  120A  118A  	fcall	_lcd_clear
  1266                           
  1267                           ;incubator.c: 179:      if(out_humidity>40)
  1268  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01C7  0821               	movf	_out_humidity+1,w
  1271  01C8  3A80               	xorlw	128
  1272  01C9  00FF               	movwf	127
  1273  01CA  3080               	movlw	128
  1274  01CB  027F               	subwf	127,w
  1275  01CC  1D03               	skipz
  1276  01CD  29D0               	goto	u915
  1277  01CE  3029               	movlw	41
  1278  01CF  0220               	subwf	_out_humidity,w
  1279  01D0                     u915:
  1280  01D0  1C03               	skipc
  1281  01D1  29D6               	goto	l137
  1282                           
  1283                           ;incubator.c: 180:     {;incubator.c: 181:         RD1=1;
  1284  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1285  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1286  01D4  1488               	bsf	8,1	;volatile
  1287                           
  1288                           ;incubator.c: 182:     }
  1289  01D5  29D9               	goto	l1670
  1290  01D6                     l137:	
  1291                           ;incubator.c: 183:     else
  1292                           
  1293                           
  1294                           ;incubator.c: 184:     {;incubator.c: 185:         RD1=0;
  1295  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1296  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1297  01D8  1088               	bcf	8,1	;volatile
  1298  01D9                     l1670:
  1299                           
  1300                           ;incubator.c: 190:     if(intensity<200 && out_temp<30)
  1301  01D9  3036               	movlw	(low (_intensity| 0))& (0+255)
  1302  01DA  00E0               	movwf	??_main
  1303  01DB  30C8               	movlw	200
  1304  01DC  0260               	subwf	??_main,w
  1305  01DD  1803               	skipnc
  1306  01DE  285C               	goto	l1604
  1307  01DF  0823               	movf	_out_temp+1,w
  1308  01E0  3A80               	xorlw	128
  1309  01E1  00FF               	movwf	127
  1310  01E2  3080               	movlw	128
  1311  01E3  027F               	subwf	127,w
  1312  01E4  1D03               	skipz
  1313  01E5  29E8               	goto	u935
  1314  01E6  301E               	movlw	30
  1315  01E7  0222               	subwf	_out_temp,w
  1316  01E8                     u935:
  1317  01E8  1803               	skipnc
  1318  01E9  285C               	goto	l1604
  1319                           
  1320                           ;incubator.c: 191:      {;incubator.c: 192:        if(flag==1)
  1321  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1322  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1323  01EC  0364               	decf	_flag,w
  1324  01ED  0465               	iorwf	_flag+1,w
  1325  01EE  1D03               	btfss	3,2
  1326  01EF  2A0E               	goto	l1686
  1327                           
  1328                           ;incubator.c: 196:         lcd_clear();
  1329  01F0  120A  118A  26AD  120A  118A  	fcall	_lcd_clear
  1330                           
  1331                           ;incubator.c: 197:         lcd_position(1,0);
  1332  01F5  3001               	movlw	1
  1333  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1334  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1335  01F8  00D0               	movwf	lcd_position@row
  1336  01F9  3000               	movlw	0
  1337  01FA  00D1               	movwf	lcd_position@row+1
  1338  01FB  3000               	movlw	0
  1339  01FC  00D2               	movwf	lcd_position@column
  1340  01FD  00D3               	movwf	lcd_position@column+1
  1341  01FE  120A  118A  265D  120A  118A  	fcall	_lcd_position
  1342                           
  1343                           ;incubator.c: 199:         lcd_clear();
  1344  0203  120A  118A  26AD  120A  118A  	fcall	_lcd_clear
  1345                           
  1346                           ;incubator.c: 201:         gsm_msg();
  1347  0208  120A  118A  2213  120A  118A  	fcall	_gsm_msg
  1348                           
  1349                           ;incubator.c: 202:         }
  1350  020D  285C               	goto	l1604
  1351  020E                     l1686:
  1352                           
  1353                           ;incubator.c: 204:        {;incubator.c: 205:         flag=1;
  1354  020E  3001               	movlw	1
  1355  020F  00E4               	movwf	_flag
  1356  0210  3000               	movlw	0
  1357  0211  00E5               	movwf	_flag+1
  1358  0212  285C               	goto	l1604
  1359  0213                     __end_of_main:
  1360                           
  1361                           	psect	text1
  1362  068D                     __ptext1:	
  1363 ;; *************** function _timer1_config *****************
  1364 ;; Defined at:
  1365 ;;		line 77 in file "incubator.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/100
  1376 ;;		On exit  : 300/100
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0
  1382 ;;      Totals:         0       0       0       0       0
  1383 ;;Total ram usage:        0 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 2
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           
  1394                           ;psect for function _timer1_config
  1395  068D                     _timer1_config:
  1396                           
  1397                           ;incubator.c: 79:     T1CON=0x31;
  1398                           
  1399                           ;incstack = 0
  1400                           ; Regs used in _timer1_config: [wreg]
  1401  068D  3031               	movlw	49
  1402  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1403  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0690  0090               	movwf	16	;volatile
  1405                           
  1406                           ;incubator.c: 80:     INTCON=0xc0;
  1407  0691  30C0               	movlw	192
  1408  0692  008B               	movwf	11	;volatile
  1409                           
  1410                           ;incubator.c: 81:     PIE1=0x01;
  1411  0693  3001               	movlw	1
  1412  0694  1683               	bsf	3,5	;RP0=1, select bank1
  1413  0695  008C               	movwf	12	;volatile
  1414  0696  0008               	return
  1415  0697                     __end_of_timer1_config:
  1416                           
  1417                           	psect	text2
  1418  05DA                     __ptext2:	
  1419 ;; *************** function _lcd_string *****************
  1420 ;; Defined at:
  1421 ;;		line 60 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  a               2   10[BANK0 ] PTR unsigned char 
  1424 ;;		 -> STR_3(4), STR_2(3), STR_1(2), intensity(10), 
  1425 ;;		 -> humidity(10), temperature(4), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 300/0
  1434 ;;		On exit  : 300/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         0       2       0       0       0
  1438 ;;      Locals:         0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0
  1440 ;;      Totals:         0       2       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 5
  1444 ;; This function calls:
  1445 ;;		_lcd_data
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _lcd_string
  1453  05DA                     _lcd_string:
  1454  05DA                     l1536:	
  1455                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 60: void lcd_string(char *a);../../
      +                          ../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 61: {;../../../LCD_driver/LCD_driver.X/Lcd
      +                          _16x2_Driver.c: 62:     while(*a!='\0')
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1459                           
  1460                           
  1461                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 62:     while(*a!='\0')
  1462  05DA  0851               	movf	lcd_string@a+1,w
  1463  05DB  00FF               	movwf	127
  1464  05DC  0850               	movf	lcd_string@a,w
  1465  05DD  0084               	movwf	4
  1466  05DE  120A  118A  2322  120A  118A  	fcall	stringtab
  1467  05E3  3A00               	xorlw	0
  1468  05E4  1903               	btfsc	3,2
  1469  05E5  0008               	return
  1470                           
  1471                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 63:     {;../../../LCD_driver/LCD_d
      +                          river.X/Lcd_16x2_Driver.c: 64:         lcd_data(*a);
  1472  05E6  0851               	movf	lcd_string@a+1,w
  1473  05E7  00FF               	movwf	127
  1474  05E8  0850               	movf	lcd_string@a,w
  1475  05E9  0084               	movwf	4
  1476  05EA  120A  118A  2322  120A  118A  	fcall	stringtab
  1477  05EF  120A  118A  2529  120A  118A  	fcall	_lcd_data
  1478                           
  1479                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 65:         a++;
  1480  05F4  3001               	movlw	1
  1481  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1482  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1483  05F7  07D0               	addwf	lcd_string@a,f
  1484  05F8  1803               	skipnc
  1485  05F9  0AD1               	incf	lcd_string@a+1,f
  1486  05FA  3000               	movlw	0
  1487  05FB  07D1               	addwf	lcd_string@a+1,f
  1488  05FC  2DDA               	goto	l1536
  1489  05FD                     __end_of_lcd_string:
  1490                           
  1491                           	psect	text3
  1492  0529                     __ptext3:	
  1493 ;; *************** function _lcd_data *****************
  1494 ;; Defined at:
  1495 ;;		line 30 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  a               1    wreg     unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  a               1    9[BANK0 ] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 300/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       1       0       0       0
  1511 ;;      Temps:          0       2       0       0       0
  1512 ;;      Totals:         0       3       0       0       0
  1513 ;;Total ram usage:        3 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 4
  1516 ;; This function calls:
  1517 ;;		_delay
  1518 ;;		_lcd_enable
  1519 ;; This function is called by:
  1520 ;;		_lcd_string
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _lcd_data
  1526  0529                     _lcd_data:
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1530                           ;lcd_data@a stored from wreg
  1531  0529  00CF               	movwf	lcd_data@a
  1532                           
  1533                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 30: void lcd_data(char a);../../../
      +                          LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 31: {;../../../LCD_driver/LCD_driver.X/Lcd_16
      +                          x2_Driver.c: 32:     RE2=1;
  1534  052A  1509               	bsf	9,2	;volatile
  1535                           
  1536                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 33:     PORTB=(a&0xf0)|(PORTB&0x0f)
      +                          ;
  1537  052B  300F               	movlw	15
  1538  052C  0506               	andwf	6,w	;volatile
  1539  052D  00CD               	movwf	??_lcd_data
  1540  052E  084F               	movf	lcd_data@a,w
  1541  052F  39F0               	andlw	240
  1542  0530  044D               	iorwf	??_lcd_data,w
  1543  0531  0086               	movwf	6	;volatile
  1544                           
  1545                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 34:     lcd_enable();
  1546  0532  120A  118A  2678  120A  118A  	fcall	_lcd_enable
  1547                           
  1548                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 35:     PORTB=((a<<4)&(0xf0))|(PORT
      +                          B&0x0f);
  1549  0537  300F               	movlw	15
  1550  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1552  053A  0506               	andwf	6,w	;volatile
  1553  053B  00CD               	movwf	??_lcd_data
  1554  053C  084F               	movf	lcd_data@a,w
  1555  053D  00CE               	movwf	??_lcd_data+1
  1556  053E  3003               	movlw	3
  1557  053F                     u545:
  1558  053F  1003               	clrc
  1559  0540  0DCE               	rlf	??_lcd_data+1,f
  1560  0541  3EFF               	addlw	-1
  1561  0542  1D03               	skipz
  1562  0543  2D3F               	goto	u545
  1563  0544  1003               	clrc
  1564  0545  0D4E               	rlf	??_lcd_data+1,w
  1565  0546  39F0               	andlw	240
  1566  0547  044D               	iorwf	??_lcd_data,w
  1567  0548  0086               	movwf	6	;volatile
  1568                           
  1569                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 36:     lcd_enable();
  1570  0549  120A  118A  2678  120A  118A  	fcall	_lcd_enable
  1571                           
  1572                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 37:     delay(10);
  1573  054E  300A               	movlw	10
  1574  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0551  00C6               	movwf	delay@ms
  1577  0552  3000               	movlw	0
  1578  0553  00C7               	movwf	delay@ms+1
  1579  0554  120A  118A  2558   	fcall	_delay
  1580  0557  0008               	return
  1581  0558                     __end_of_lcd_data:
  1582                           
  1583                           	psect	text4
  1584  063E                     __ptext4:	
  1585 ;; *************** function _lcd_initialize *****************
  1586 ;; Defined at:
  1587 ;;		line 116 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : B00/100
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 6
  1608 ;; This function calls:
  1609 ;;		_lcd_command
  1610 ;;		_lcd_displayon_cursoron
  1611 ;;		_lcd_position
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _lcd_initialize
  1619  063E                     _lcd_initialize:
  1620                           
  1621                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 118:     RE1=0;
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _lcd_initialize: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1625  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1626  063F  1089               	bcf	9,1	;volatile
  1627                           
  1628                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 122:     lcd_command(0x02);
  1629  0640  3002               	movlw	2
  1630  0641  120A  118A  24F8  120A  118A  	fcall	_lcd_command
  1631                           
  1632                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 123:     lcd_command(0x28);
  1633  0646  3028               	movlw	40
  1634  0647  120A  118A  24F8  120A  118A  	fcall	_lcd_command
  1635                           
  1636                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 127:     lcd_displayon_cursoron();
  1637  064C  120A  118A  26A8  120A  118A  	fcall	_lcd_displayon_cursoron
  1638                           
  1639                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 129:     lcd_position(0,0);
  1640  0651  3000               	movlw	0
  1641  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0654  00D0               	movwf	lcd_position@row
  1644  0655  00D1               	movwf	lcd_position@row+1
  1645  0656  3000               	movlw	0
  1646  0657  00D2               	movwf	lcd_position@column
  1647  0658  00D3               	movwf	lcd_position@column+1
  1648  0659  120A  118A  265D   	fcall	_lcd_position
  1649  065C  0008               	return
  1650  065D                     __end_of_lcd_initialize:
  1651                           
  1652                           	psect	text5
  1653  065D                     __ptext5:	
  1654 ;; *************** function _lcd_position *****************
  1655 ;; Defined at:
  1656 ;;		line 82 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  row             2   10[BANK0 ] int 
  1659 ;;  column          2   12[BANK0 ] int 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 300/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         0       4       0       0       0
  1672 ;;      Locals:         0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0
  1674 ;;      Totals:         0       4       0       0       0
  1675 ;;Total ram usage:        4 bytes
  1676 ;; Hardware stack levels used: 1
  1677 ;; Hardware stack levels required when called: 5
  1678 ;; This function calls:
  1679 ;;		_lcd_command
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;;		_lcd_initialize
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           
  1687                           ;psect for function _lcd_position
  1688  065D                     _lcd_position:
  1689                           
  1690                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 82: void lcd_position(int row,int c
      +                          olumn);../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 83: {;../../../LCD_driver/LCD
      +                          _driver.X/Lcd_16x2_Driver.c: 84:     switch(row)
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _lcd_position: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1694  065D  2E6A               	goto	l1312
  1695  065E                     l1306:
  1696                           
  1697                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 87:             lcd_command(0x80+co
      +                          lumn);
  1698  065E  0852               	movf	lcd_position@column,w
  1699  065F  3E80               	addlw	128
  1700  0660  120A  118A  24F8   	fcall	_lcd_command
  1701                           
  1702                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 88:             break;
  1703  0663  0008               	return
  1704  0664                     l1308:
  1705                           
  1706                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 91:             lcd_command(0xC0+co
      +                          lumn);
  1707  0664  0852               	movf	lcd_position@column,w
  1708  0665  3EC0               	addlw	192
  1709  0666  120A  118A  24F8   	fcall	_lcd_command
  1710                           
  1711                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 92:             break;
  1712  0669  0008               	return
  1713  066A                     l1312:
  1714                           
  1715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 1, Range of values is 0 to 0
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte            4     3 (average)
  1721                           ; direct_byte           11     8 (fixed)
  1722                           ; jumptable            260     6 (fixed)
  1723                           ;	Chosen strategy is simple_byte
  1724  066A  0851               	movf	lcd_position@row+1,w
  1725  066B  3A00               	xorlw	0	; case 0
  1726  066C  1903               	skipnz
  1727  066D  2E6F               	goto	l1708
  1728  066E  2E77               	goto	l192
  1729  066F                     l1708:
  1730                           
  1731                           ; Switch size 1, requested type "simple"
  1732                           ; Number of cases is 2, Range of values is 0 to 1
  1733                           ; switch strategies available:
  1734                           ; Name         Instructions Cycles
  1735                           ; simple_byte            7     4 (average)
  1736                           ; direct_byte           14     8 (fixed)
  1737                           ; jumptable            260     6 (fixed)
  1738                           ;	Chosen strategy is simple_byte
  1739  066F  0850               	movf	lcd_position@row,w
  1740  0670  3A00               	xorlw	0	; case 0
  1741  0671  1903               	skipnz
  1742  0672  2E5E               	goto	l1306
  1743  0673  3A01               	xorlw	1	; case 1
  1744  0674  1903               	skipnz
  1745  0675  2E64               	goto	l1308
  1746  0676  2E77               	goto	l192
  1747  0677                     l192:
  1748  0677  0008               	return
  1749  0678                     __end_of_lcd_position:
  1750                           
  1751                           	psect	text6
  1752  06A8                     __ptext6:	
  1753 ;; *************** function _lcd_displayon_cursoron *****************
  1754 ;; Defined at:
  1755 ;;		line 96 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 5
  1776 ;; This function calls:
  1777 ;;		_lcd_command
  1778 ;; This function is called by:
  1779 ;;		_lcd_initialize
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _lcd_displayon_cursoron
  1785  06A8                     _lcd_displayon_cursoron:
  1786                           
  1787                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 98:     lcd_command(0x0E);
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _lcd_displayon_cursoron: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1791  06A8  300E               	movlw	14
  1792  06A9  120A  118A  24F8   	fcall	_lcd_command
  1793  06AC  0008               	return
  1794  06AD                     __end_of_lcd_displayon_cursoron:
  1795                           
  1796                           	psect	text7
  1797  06AD                     __ptext7:	
  1798 ;; *************** function _lcd_clear *****************
  1799 ;; Defined at:
  1800 ;;		line 112 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 5
  1821 ;; This function calls:
  1822 ;;		_lcd_command
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _lcd_clear
  1830  06AD                     _lcd_clear:
  1831                           
  1832                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 114:     lcd_command(0x01);
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1836  06AD  3001               	movlw	1
  1837  06AE  120A  118A  24F8   	fcall	_lcd_command
  1838  06B1  0008               	return
  1839  06B2                     __end_of_lcd_clear:
  1840                           
  1841                           	psect	text8
  1842  04F8                     __ptext8:	
  1843 ;; *************** function _lcd_command *****************
  1844 ;; Defined at:
  1845 ;;		line 20 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  a               1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  a               1    9[BANK0 ] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       0       0       0       0
  1860 ;;      Locals:         0       1       0       0       0
  1861 ;;      Temps:          0       2       0       0       0
  1862 ;;      Totals:         0       3       0       0       0
  1863 ;;Total ram usage:        3 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 4
  1866 ;; This function calls:
  1867 ;;		_delay
  1868 ;;		_lcd_enable
  1869 ;; This function is called by:
  1870 ;;		_lcd_position
  1871 ;;		_lcd_displayon_cursoron
  1872 ;;		_lcd_clear
  1873 ;;		_lcd_initialize
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _lcd_command
  1879  04F8                     _lcd_command:
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1883                           ;lcd_command@a stored from wreg
  1884  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1885  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1886  04FA  00CF               	movwf	lcd_command@a
  1887                           
  1888                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 20: void lcd_command(char a);../../
      +                          ../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 21: {;../../../LCD_driver/LCD_driver.X/Lcd
      +                          _16x2_Driver.c: 22:      RE2=0;
  1889  04FB  1109               	bcf	9,2	;volatile
  1890                           
  1891                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 23:     PORTB=(a&0xf0)|(PORTB&0x0f)
      +                          ;
  1892  04FC  300F               	movlw	15
  1893  04FD  0506               	andwf	6,w	;volatile
  1894  04FE  00CD               	movwf	??_lcd_command
  1895  04FF  084F               	movf	lcd_command@a,w
  1896  0500  39F0               	andlw	240
  1897  0501  044D               	iorwf	??_lcd_command,w
  1898  0502  0086               	movwf	6	;volatile
  1899                           
  1900                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 24:     lcd_enable();
  1901  0503  120A  118A  2678  120A  118A  	fcall	_lcd_enable
  1902                           
  1903                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 25:     PORTB=((a<<4)&(0xf0))|(PORT
      +                          B&0x0f);
  1904  0508  300F               	movlw	15
  1905  0509  1283               	bcf	3,5	;RP0=0, select bank0
  1906  050A  1303               	bcf	3,6	;RP1=0, select bank0
  1907  050B  0506               	andwf	6,w	;volatile
  1908  050C  00CD               	movwf	??_lcd_command
  1909  050D  084F               	movf	lcd_command@a,w
  1910  050E  00CE               	movwf	??_lcd_command+1
  1911  050F  3003               	movlw	3
  1912  0510                     u505:
  1913  0510  1003               	clrc
  1914  0511  0DCE               	rlf	??_lcd_command+1,f
  1915  0512  3EFF               	addlw	-1
  1916  0513  1D03               	skipz
  1917  0514  2D10               	goto	u505
  1918  0515  1003               	clrc
  1919  0516  0D4E               	rlf	??_lcd_command+1,w
  1920  0517  39F0               	andlw	240
  1921  0518  044D               	iorwf	??_lcd_command,w
  1922  0519  0086               	movwf	6	;volatile
  1923                           
  1924                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 26:     lcd_enable();
  1925  051A  120A  118A  2678  120A  118A  	fcall	_lcd_enable
  1926                           
  1927                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 27:     delay(10);
  1928  051F  300A               	movlw	10
  1929  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0522  00C6               	movwf	delay@ms
  1932  0523  3000               	movlw	0
  1933  0524  00C7               	movwf	delay@ms+1
  1934  0525  120A  118A  2558   	fcall	_delay
  1935  0528  0008               	return
  1936  0529                     __end_of_lcd_command:
  1937                           
  1938                           	psect	text9
  1939  0678                     __ptext9:	
  1940 ;; *************** function _lcd_enable *****************
  1941 ;; Defined at:
  1942 ;;		line 12 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 300/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 3
  1963 ;; This function calls:
  1964 ;;		_delay
  1965 ;; This function is called by:
  1966 ;;		_lcd_command
  1967 ;;		_lcd_data
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _lcd_enable
  1973  0678                     _lcd_enable:
  1974                           
  1975                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 14:     RE0=1;
  1976                           
  1977                           ;incstack = 0
  1978                           ; Regs used in _lcd_enable: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1979  0678  1409               	bsf	9,0	;volatile
  1980                           
  1981                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 15:     delay(10);
  1982  0679  300A               	movlw	10
  1983  067A  00C6               	movwf	delay@ms
  1984  067B  3000               	movlw	0
  1985  067C  00C7               	movwf	delay@ms+1
  1986  067D  120A  118A  2558  120A  118A  	fcall	_delay
  1987                           
  1988                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 16:     RE0=0;
  1989  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0684  1009               	bcf	9,0	;volatile
  1992                           
  1993                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 17:     delay(10);
  1994  0685  300A               	movlw	10
  1995  0686  00C6               	movwf	delay@ms
  1996  0687  3000               	movlw	0
  1997  0688  00C7               	movwf	delay@ms+1
  1998  0689  120A  118A  2558   	fcall	_delay
  1999  068C  0008               	return
  2000  068D                     __end_of_lcd_enable:
  2001                           
  2002                           	psect	text10
  2003  0213                     __ptext10:	
  2004 ;; *************** function _gsm_msg *****************
  2005 ;; Defined at:
  2006 ;;		line 212 in file "incubator.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 300/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 3
  2027 ;; This function calls:
  2028 ;;		_delay
  2029 ;;		_transmit_data
  2030 ;;		_transmit_string
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _gsm_msg
  2038  0213                     _gsm_msg:
  2039                           
  2040                           ;incubator.c: 215:         transmit_string("AT");
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _gsm_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2044  0213  3046               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2045  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0216  00C6               	movwf	transmit_string@a
  2048  0217  3080               	movlw	128
  2049  0218  00C7               	movwf	transmit_string@a+1
  2050  0219  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2051                           
  2052                           ;incubator.c: 216:         transmit_data(0x0D);
  2053  021E  300D               	movlw	13
  2054  021F  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2055                           
  2056                           ;incubator.c: 217:         transmit_data(0x0A);
  2057  0224  300A               	movlw	10
  2058  0225  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2059                           
  2060                           ;incubator.c: 218:         delay(1000);
  2061  022A  30E8               	movlw	232
  2062  022B  00C6               	movwf	delay@ms
  2063  022C  3003               	movlw	3
  2064  022D  00C7               	movwf	delay@ms+1
  2065  022E  120A  118A  2558  120A  118A  	fcall	_delay
  2066                           
  2067                           ;incubator.c: 219:         transmit_string("AT+CMGF=1");
  2068  0233  3025               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2069  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0236  00C6               	movwf	transmit_string@a
  2072  0237  3080               	movlw	128
  2073  0238  00C7               	movwf	transmit_string@a+1
  2074  0239  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2075                           
  2076                           ;incubator.c: 220:         transmit_data(0x0d);
  2077  023E  300D               	movlw	13
  2078  023F  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2079                           
  2080                           ;incubator.c: 221:         transmit_data(0x0A);
  2081  0244  300A               	movlw	10
  2082  0245  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2083                           
  2084                           ;incubator.c: 222:         delay(1000);
  2085  024A  30E8               	movlw	232
  2086  024B  00C6               	movwf	delay@ms
  2087  024C  3003               	movlw	3
  2088  024D  00C7               	movwf	delay@ms+1
  2089  024E  120A  118A  2558  120A  118A  	fcall	_delay
  2090                           
  2091                           ;incubator.c: 223:         transmit_string("AT+CMGS=\"+919786329004\"");
  2092  0253  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2093  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0256  00C6               	movwf	transmit_string@a
  2096  0257  3080               	movlw	128
  2097  0258  00C7               	movwf	transmit_string@a+1
  2098  0259  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2099                           
  2100                           ;incubator.c: 224:         transmit_data(0x0d);
  2101  025E  300D               	movlw	13
  2102  025F  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2103                           
  2104                           ;incubator.c: 225:         transmit_data(0x0A);
  2105  0264  300A               	movlw	10
  2106  0265  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2107                           
  2108                           ;incubator.c: 226:         delay(1000);
  2109  026A  30E8               	movlw	232
  2110  026B  00C6               	movwf	delay@ms
  2111  026C  3003               	movlw	3
  2112  026D  00C7               	movwf	delay@ms+1
  2113  026E  120A  118A  2558  120A  118A  	fcall	_delay
  2114                           
  2115                           ;incubator.c: 230:         transmit_string("TEMP:");
  2116  0273  3039               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2117  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0276  00C6               	movwf	transmit_string@a
  2120  0277  3080               	movlw	128
  2121  0278  00C7               	movwf	transmit_string@a+1
  2122  0279  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2123                           
  2124                           ;incubator.c: 231:         transmit_data(0x0d);
  2125  027E  300D               	movlw	13
  2126  027F  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2127                           
  2128                           ;incubator.c: 232:         transmit_data(0x0A);
  2129  0284  300A               	movlw	10
  2130  0285  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2131                           
  2132                           ;incubator.c: 233:         delay(1000);
  2133  028A  30E8               	movlw	232
  2134  028B  00C6               	movwf	delay@ms
  2135  028C  3003               	movlw	3
  2136  028D  00C7               	movwf	delay@ms+1
  2137  028E  120A  118A  2558  120A  118A  	fcall	_delay
  2138                           
  2139                           ;incubator.c: 234:         transmit_string(temperature);
  2140  0293  3040               	movlw	(low (_temperature| 0))& (0+255)
  2141  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0296  00C6               	movwf	transmit_string@a
  2144  0297  3000               	movlw	0
  2145  0298  00C7               	movwf	transmit_string@a+1
  2146  0299  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2147                           
  2148                           ;incubator.c: 235:         transmit_data(0x0d);
  2149  029E  300D               	movlw	13
  2150  029F  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2151                           
  2152                           ;incubator.c: 236:         transmit_data(0x0A);
  2153  02A4  300A               	movlw	10
  2154  02A5  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2155                           
  2156                           ;incubator.c: 237:         delay(1000);
  2157  02AA  30E8               	movlw	232
  2158  02AB  00C6               	movwf	delay@ms
  2159  02AC  3003               	movlw	3
  2160  02AD  00C7               	movwf	delay@ms+1
  2161  02AE  120A  118A  2558  120A  118A  	fcall	_delay
  2162                           
  2163                           ;incubator.c: 238:         transmit_string("Deg_Celsius");
  2164  02B3  3019               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2165  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2166  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2167  02B6  00C6               	movwf	transmit_string@a
  2168  02B7  3080               	movlw	128
  2169  02B8  00C7               	movwf	transmit_string@a+1
  2170  02B9  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2171                           
  2172                           ;incubator.c: 239:         transmit_data(0x0d);
  2173  02BE  300D               	movlw	13
  2174  02BF  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2175                           
  2176                           ;incubator.c: 240:         transmit_data(0x0A);
  2177  02C4  300A               	movlw	10
  2178  02C5  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2179                           
  2180                           ;incubator.c: 241:         delay(1000);
  2181  02CA  30E8               	movlw	232
  2182  02CB  00C6               	movwf	delay@ms
  2183  02CC  3003               	movlw	3
  2184  02CD  00C7               	movwf	delay@ms+1
  2185  02CE  120A  118A  2558  120A  118A  	fcall	_delay
  2186                           
  2187                           ;incubator.c: 242:         transmit_string("HUMIDITY:");
  2188  02D3  302F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2189  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2190  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2191  02D6  00C6               	movwf	transmit_string@a
  2192  02D7  3080               	movlw	128
  2193  02D8  00C7               	movwf	transmit_string@a+1
  2194  02D9  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2195                           
  2196                           ;incubator.c: 243:         transmit_string(humidity);
  2197  02DE  302C               	movlw	(low (_humidity| 0))& (0+255)
  2198  02DF  00C6               	movwf	transmit_string@a
  2199  02E0  3000               	movlw	0
  2200  02E1  00C7               	movwf	transmit_string@a+1
  2201  02E2  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2202                           
  2203                           ;incubator.c: 244:         delay(1000);
  2204  02E7  30E8               	movlw	232
  2205  02E8  00C6               	movwf	delay@ms
  2206  02E9  3003               	movlw	3
  2207  02EA  00C7               	movwf	delay@ms+1
  2208  02EB  120A  118A  2558  120A  118A  	fcall	_delay
  2209                           
  2210                           ;incubator.c: 245:         transmit_string("RH");
  2211  02F0  3043               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2212  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2213  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2214  02F3  00C6               	movwf	transmit_string@a
  2215  02F4  3080               	movlw	128
  2216  02F5  00C7               	movwf	transmit_string@a+1
  2217  02F6  120A  118A  261E  120A  118A  	fcall	_transmit_string
  2218                           
  2219                           ;incubator.c: 246:         transmit_data(0x0D);
  2220  02FB  300D               	movlw	13
  2221  02FC  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2222                           
  2223                           ;incubator.c: 247:         transmit_data(0x0A);
  2224  0301  300A               	movlw	10
  2225  0302  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2226                           
  2227                           ;incubator.c: 248:         delay(1000);
  2228  0307  30E8               	movlw	232
  2229  0308  00C6               	movwf	delay@ms
  2230  0309  3003               	movlw	3
  2231  030A  00C7               	movwf	delay@ms+1
  2232  030B  120A  118A  2558  120A  118A  	fcall	_delay
  2233                           
  2234                           ;incubator.c: 249:         transmit_data(0x1A);
  2235  0310  301A               	movlw	26
  2236  0311  120A  118A  2697  120A  118A  	fcall	_transmit_data
  2237                           
  2238                           ;incubator.c: 250:         delay(1000);
  2239  0316  30E8               	movlw	232
  2240  0317  00C6               	movwf	delay@ms
  2241  0318  3003               	movlw	3
  2242  0319  00C7               	movwf	delay@ms+1
  2243  031A  120A  118A  2558   	fcall	_delay
  2244                           
  2245                           ;incubator.c: 251:         flag=0;
  2246  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2247  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2248  031F  01E4               	clrf	_flag
  2249  0320  01E5               	clrf	_flag+1
  2250  0321  0008               	return
  2251  0322                     __end_of_gsm_msg:
  2252                           
  2253                           	psect	text11
  2254  061E                     __ptext11:	
  2255 ;; *************** function _transmit_string *****************
  2256 ;; Defined at:
  2257 ;;		line 46 in file "incubator.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  a               2    0[BANK0 ] PTR unsigned char 
  2260 ;;		 -> STR_10(3), STR_9(10), STR_8(12), STR_7(6), 
  2261 ;;		 -> STR_6(24), STR_5(10), STR_4(3), humidity(10), 
  2262 ;;		 -> temperature(4), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  2269 ;; Tracked objects:
  2270 ;;		On entry : 300/0
  2271 ;;		On exit  : 300/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       2       0       0       0
  2275 ;;      Locals:         0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0
  2277 ;;      Totals:         0       2       0       0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_gsm_msg
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _transmit_string
  2290  061E                     _transmit_string:
  2291  061E                     l1302:	
  2292                           ;incubator.c: 46: void transmit_string(char *a);incubator.c: 47: {;incubator.c: 48:     
      +                          while(*a)
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _transmit_string: [wreg-fsr0h+btemp+1+pclath]
  2296                           
  2297                           
  2298                           ;incubator.c: 48:     while(*a)
  2299  061E  0847               	movf	transmit_string@a+1,w
  2300  061F  00FF               	movwf	127
  2301  0620  0846               	movf	transmit_string@a,w
  2302  0621  0084               	movwf	4
  2303  0622  120A  118A  2322  120A  118A  	fcall	stringtab
  2304  0627  3A00               	xorlw	0
  2305  0628  1903               	btfsc	3,2
  2306  0629  0008               	return
  2307                           
  2308                           ;incubator.c: 49:     {;incubator.c: 50:         TXREG=*a;
  2309  062A  0847               	movf	transmit_string@a+1,w
  2310  062B  00FF               	movwf	127
  2311  062C  0846               	movf	transmit_string@a,w
  2312  062D  0084               	movwf	4
  2313  062E  120A  118A  2322  120A  118A  	fcall	stringtab
  2314  0633  0099               	movwf	25	;volatile
  2315                           
  2316                           ;incubator.c: 51:         a++;
  2317  0634  3001               	movlw	1
  2318  0635  07C6               	addwf	transmit_string@a,f
  2319  0636  1803               	skipnc
  2320  0637  0AC7               	incf	transmit_string@a+1,f
  2321  0638  3000               	movlw	0
  2322  0639  07C7               	addwf	transmit_string@a+1,f
  2323  063A                     l105:	
  2324                           ;incubator.c: 52:         while(TXIF==0);
  2325                           
  2326  063A  1E0C               	btfss	12,4	;volatile
  2327  063B  2E3A               	goto	l105
  2328                           
  2329                           ;incubator.c: 53:         TXIF=0;
  2330  063C  120C               	bcf	12,4	;volatile
  2331  063D  2E1E               	goto	l1302
  2332  063E                     __end_of_transmit_string:
  2333                           
  2334                           	psect	text12
  2335  0697                     __ptext12:	
  2336 ;; *************** function _transmit_data *****************
  2337 ;; Defined at:
  2338 ;;		line 40 in file "incubator.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  a               1    wreg     unsigned char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  a               1    0[BANK0 ] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 300/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         0       0       0       0       0
  2353 ;;      Locals:         0       1       0       0       0
  2354 ;;      Temps:          0       0       0       0       0
  2355 ;;      Totals:         0       1       0       0       0
  2356 ;;Total ram usage:        1 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 2
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_gsm_msg
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _transmit_data
  2368  0697                     _transmit_data:
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in _transmit_data: [wreg]
  2372                           ;transmit_data@a stored from wreg
  2373  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0699  00C6               	movwf	transmit_data@a
  2376                           
  2377                           ;incubator.c: 40: void transmit_data(char a);incubator.c: 41: {;incubator.c: 42:     TXR
      +                          EG=a;
  2378  069A  0846               	movf	transmit_data@a,w
  2379  069B  0099               	movwf	25	;volatile
  2380  069C                     l97:	
  2381                           ;incubator.c: 43:     while(TXIF==0);
  2382                           
  2383  069C  1E0C               	btfss	12,4	;volatile
  2384  069D  2E9C               	goto	l97
  2385                           
  2386                           ;incubator.c: 44:     TXIF=0;
  2387  069E  120C               	bcf	12,4	;volatile
  2388  069F  0008               	return
  2389  06A0                     __end_of_transmit_data:
  2390                           
  2391                           	psect	text13
  2392  03D5                     __ptext13:	
  2393 ;; *************** function _digit_split_a *****************
  2394 ;; Defined at:
  2395 ;;		line 151 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  b               1    wreg     PTR unsigned char 
  2398 ;;		 -> intensity(10), humidity(10), temperature(4), 
  2399 ;;  a               2   17[BANK0 ] int 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  b               1   25[BANK0 ] PTR unsigned char 
  2402 ;;		 -> intensity(10), humidity(10), temperature(4), 
  2403 ;;  i               2   23[BANK0 ] int 
  2404 ;;  mod             2   21[BANK0 ] int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2   17[BANK0 ] int 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 300/0
  2411 ;;		On exit  : B00/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       2       0       0       0
  2415 ;;      Locals:         0       5       0       0       0
  2416 ;;      Temps:          0       2       0       0       0
  2417 ;;      Totals:         0       9       0       0       0
  2418 ;;Total ram usage:        9 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 3
  2421 ;; This function calls:
  2422 ;;		___awdiv
  2423 ;;		___awmod
  2424 ;;		_string_rev
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function _digit_split_a
  2432  03D5                     _digit_split_a:
  2433                           
  2434                           ;incstack = 0
  2435                           ; Regs used in _digit_split_a: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2436                           ;digit_split_a@b stored from wreg
  2437  03D5  00DF               	movwf	digit_split_a@b
  2438                           
  2439                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 151: int digit_split_a(char *b,int 
      +                          a);../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 152: {;../../../LCD_driver/LCD_dr
      +                          iver.X/Lcd_16x2_Driver.c: 153:     int mod;;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Dr
      +                          iver.c: 154:     int i=0;
  2440  03D6  01DD               	clrf	digit_split_a@i
  2441  03D7  01DE               	clrf	digit_split_a@i+1
  2442  03D8                     l1466:	
  2443                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 155:     while(a>0)
  2444                           
  2445                           
  2446                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 155:     while(a>0)
  2447  03D8  0858               	movf	digit_split_a@a+1,w
  2448  03D9  3A80               	xorlw	128
  2449  03DA  00FF               	movwf	127
  2450  03DB  3080               	movlw	128
  2451  03DC  027F               	subwf	127,w
  2452  03DD  1D03               	skipz
  2453  03DE  2BE1               	goto	u785
  2454  03DF  3001               	movlw	1
  2455  03E0  0257               	subwf	digit_split_a@a,w
  2456  03E1                     u785:
  2457  03E1  1C03               	btfss	3,0
  2458  03E2  2C19               	goto	l1468
  2459                           
  2460                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 156:     {;../../../LCD_driver/LCD_
      +                          driver.X/Lcd_16x2_Driver.c: 157:         mod=a%10;
  2461  03E3  300A               	movlw	10
  2462  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2463  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2464  03E6  00C6               	movwf	___awmod@divisor
  2465  03E7  3000               	movlw	0
  2466  03E8  00C7               	movwf	___awmod@divisor+1
  2467  03E9  0858               	movf	digit_split_a@a+1,w
  2468  03EA  00C9               	movwf	___awmod@dividend+1
  2469  03EB  0857               	movf	digit_split_a@a,w
  2470  03EC  00C8               	movwf	___awmod@dividend
  2471  03ED  120A  118A  2477  120A  118A  	fcall	___awmod
  2472  03F2  0847               	movf	?___awmod+1,w
  2473  03F3  00DC               	movwf	digit_split_a@mod+1
  2474  03F4  0846               	movf	?___awmod,w
  2475  03F5  00DB               	movwf	digit_split_a@mod
  2476                           
  2477                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 158:         b[i]=mod+48;
  2478  03F6  085B               	movf	digit_split_a@mod,w
  2479  03F7  3E30               	addlw	48
  2480  03F8  00D9               	movwf	??_digit_split_a
  2481  03F9  085D               	movf	digit_split_a@i,w
  2482  03FA  075F               	addwf	digit_split_a@b,w
  2483  03FB  00DA               	movwf	??_digit_split_a+1
  2484  03FC  085A               	movf	??_digit_split_a+1,w
  2485  03FD  0084               	movwf	4
  2486  03FE  0859               	movf	??_digit_split_a,w
  2487  03FF  1383               	bcf	3,7	;select IRP bank0
  2488  0400  0080               	movwf	0
  2489                           
  2490                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 159:         i++;
  2491  0401  3001               	movlw	1
  2492  0402  07DD               	addwf	digit_split_a@i,f
  2493  0403  1803               	skipnc
  2494  0404  0ADE               	incf	digit_split_a@i+1,f
  2495  0405  3000               	movlw	0
  2496  0406  07DE               	addwf	digit_split_a@i+1,f
  2497                           
  2498                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 160:         a=a/10;
  2499  0407  300A               	movlw	10
  2500  0408  00CC               	movwf	___awdiv@divisor
  2501  0409  3000               	movlw	0
  2502  040A  00CD               	movwf	___awdiv@divisor+1
  2503  040B  0858               	movf	digit_split_a@a+1,w
  2504  040C  00CF               	movwf	___awdiv@dividend+1
  2505  040D  0857               	movf	digit_split_a@a,w
  2506  040E  00CE               	movwf	___awdiv@dividend
  2507  040F  120A  118A  237C  120A  118A  	fcall	___awdiv
  2508  0414  084D               	movf	?___awdiv+1,w
  2509  0415  00D8               	movwf	digit_split_a@a+1
  2510  0416  084C               	movf	?___awdiv,w
  2511  0417  00D7               	movwf	digit_split_a@a
  2512  0418  2BD8               	goto	l1466
  2513  0419                     l1468:
  2514                           
  2515                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 162:     string_rev(b);
  2516  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2517  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2518  041B  085F               	movf	digit_split_a@b,w
  2519  041C  120A  118A  2426   	fcall	_string_rev
  2520                           
  2521                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 163:     b[i]='\0';
  2522  041F  085D               	movf	digit_split_a@i,w
  2523  0420  075F               	addwf	digit_split_a@b,w
  2524  0421  00D9               	movwf	??_digit_split_a
  2525  0422  0859               	movf	??_digit_split_a,w
  2526  0423  0084               	movwf	4
  2527  0424  0180               	clrf	0
  2528  0425  0008               	return
  2529  0426                     __end_of_digit_split_a:
  2530                           
  2531                           	psect	text14
  2532  0426                     __ptext14:	
  2533 ;; *************** function _string_rev *****************
  2534 ;; Defined at:
  2535 ;;		line 132 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  a               1    wreg     PTR unsigned char 
  2538 ;;		 -> intensity(10), humidity(10), temperature(4), 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  a               1   14[BANK0 ] PTR unsigned char 
  2541 ;;		 -> intensity(10), humidity(10), temperature(4), 
  2542 ;;  b              10    2[BANK0 ] unsigned char [10]
  2543 ;;  i               2   15[BANK0 ] int 
  2544 ;;  j               2   12[BANK0 ] int 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 300/0
  2551 ;;		On exit  : B00/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         0      15       0       0       0
  2556 ;;      Temps:          0       2       0       0       0
  2557 ;;      Totals:         0      17       0       0       0
  2558 ;;Total ram usage:       17 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 2
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_digit_split_a
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _string_rev
  2570  0426                     _string_rev:
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _string_rev: [wreg-fsr0h+status,2+status,0]
  2574                           ;string_rev@a stored from wreg
  2575  0426  00D4               	movwf	string_rev@a
  2576                           
  2577                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 132: void string_rev(char *a);../..
      +                          /../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 133: {;../../../LCD_driver/LCD_driver.X/L
      +                          cd_16x2_Driver.c: 134:     int i,j=0;
  2578  0427  01D2               	clrf	string_rev@j
  2579  0428  01D3               	clrf	string_rev@j+1
  2580                           
  2581                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 135:     char b[10];;../../../LCD_d
      +                          river/LCD_driver.X/Lcd_16x2_Driver.c: 137:     for(i=0;a[i]!='\0';i++);
  2582  0429  01D5               	clrf	string_rev@i
  2583  042A  01D6               	clrf	string_rev@i+1
  2584  042B                     l1332:
  2585  042B  0855               	movf	string_rev@i,w
  2586  042C  0754               	addwf	string_rev@a,w
  2587  042D  00C6               	movwf	??_string_rev
  2588  042E  0846               	movf	??_string_rev,w
  2589  042F  0084               	movwf	4
  2590  0430  1383               	bcf	3,7	;select IRP bank0
  2591  0431  0800               	movf	0,w
  2592  0432  1903               	btfsc	3,2
  2593  0433  2C3B               	goto	l1334
  2594  0434  3001               	movlw	1
  2595  0435  07D5               	addwf	string_rev@i,f
  2596  0436  1803               	skipnc
  2597  0437  0AD6               	incf	string_rev@i+1,f
  2598  0438  3000               	movlw	0
  2599  0439  07D6               	addwf	string_rev@i+1,f
  2600  043A  2C2B               	goto	l1332
  2601  043B                     l1334:
  2602                           
  2603                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 138:     i--;
  2604  043B  30FF               	movlw	255
  2605  043C  07D5               	addwf	string_rev@i,f
  2606  043D  1803               	skipnc
  2607  043E  0AD6               	incf	string_rev@i+1,f
  2608  043F  30FF               	movlw	255
  2609  0440  07D6               	addwf	string_rev@i+1,f
  2610  0441                     l1342:	
  2611                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 139:     while(i>=0)
  2612                           
  2613                           
  2614                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 139:     while(i>=0)
  2615  0441  1BD6               	btfsc	string_rev@i+1,7
  2616  0442  2C5C               	goto	l1344
  2617                           
  2618                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 140:     {;../../../LCD_driver/LCD_
      +                          driver.X/Lcd_16x2_Driver.c: 141:     b[j]=a[i];
  2619  0443  0855               	movf	string_rev@i,w
  2620  0444  0754               	addwf	string_rev@a,w
  2621  0445  00C6               	movwf	??_string_rev
  2622  0446  0846               	movf	??_string_rev,w
  2623  0447  0084               	movwf	4
  2624  0448  0800               	movf	0,w
  2625  0449  00C7               	movwf	??_string_rev+1
  2626  044A  0852               	movf	string_rev@j,w
  2627  044B  3E48               	addlw	(low (string_rev@b| 0))& (0+255)
  2628  044C  0084               	movwf	4
  2629  044D  0847               	movf	??_string_rev+1,w
  2630  044E  0080               	movwf	0
  2631                           
  2632                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 142:     i--;
  2633  044F  30FF               	movlw	255
  2634  0450  07D5               	addwf	string_rev@i,f
  2635  0451  1803               	skipnc
  2636  0452  0AD6               	incf	string_rev@i+1,f
  2637  0453  30FF               	movlw	255
  2638  0454  07D6               	addwf	string_rev@i+1,f
  2639                           
  2640                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 143:     j++;
  2641  0455  3001               	movlw	1
  2642  0456  07D2               	addwf	string_rev@j,f
  2643  0457  1803               	skipnc
  2644  0458  0AD3               	incf	string_rev@j+1,f
  2645  0459  3000               	movlw	0
  2646  045A  07D3               	addwf	string_rev@j+1,f
  2647  045B  2C41               	goto	l1342
  2648  045C                     l1344:
  2649                           
  2650                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 145:     for(i=0;b[i]!='\0';i++)
  2651  045C  01D5               	clrf	string_rev@i
  2652  045D  01D6               	clrf	string_rev@i+1
  2653  045E                     l1350:
  2654  045E  0855               	movf	string_rev@i,w
  2655  045F  3E48               	addlw	(low (string_rev@b| 0))& (0+255)
  2656  0460  0084               	movwf	4
  2657  0461  0800               	movf	0,w
  2658  0462  1903               	btfsc	3,2
  2659  0463  0008               	return
  2660                           
  2661                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 146:     {;../../../LCD_driver/LCD_
      +                          driver.X/Lcd_16x2_Driver.c: 147:         a[i]=b[i];
  2662  0464  0855               	movf	string_rev@i,w
  2663  0465  3E48               	addlw	(low (string_rev@b| 0))& (0+255)
  2664  0466  0084               	movwf	4
  2665  0467  0800               	movf	0,w
  2666  0468  00C6               	movwf	??_string_rev
  2667  0469  0855               	movf	string_rev@i,w
  2668  046A  0754               	addwf	string_rev@a,w
  2669  046B  00C7               	movwf	??_string_rev+1
  2670  046C  0847               	movf	??_string_rev+1,w
  2671  046D  0084               	movwf	4
  2672  046E  0846               	movf	??_string_rev,w
  2673  046F  0080               	movwf	0
  2674                           
  2675                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 148:     }
  2676  0470  3001               	movlw	1
  2677  0471  07D5               	addwf	string_rev@i,f
  2678  0472  1803               	skipnc
  2679  0473  0AD6               	incf	string_rev@i+1,f
  2680  0474  3000               	movlw	0
  2681  0475  07D6               	addwf	string_rev@i+1,f
  2682  0476  2C5E               	goto	l1350
  2683  0477                     __end_of_string_rev:
  2684                           
  2685                           	psect	text15
  2686  0477                     __ptext15:	
  2687 ;; *************** function ___awmod *****************
  2688 ;; Defined at:
  2689 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  divisor         2    0[BANK0 ] int 
  2692 ;;  dividend        2    2[BANK0 ] int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  sign            1    6[BANK0 ] unsigned char 
  2695 ;;  counter         1    5[BANK0 ] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2    0[BANK0 ] int 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 300/0
  2702 ;;		On exit  : 300/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       4       0       0       0
  2706 ;;      Locals:         0       2       0       0       0
  2707 ;;      Temps:          0       1       0       0       0
  2708 ;;      Totals:         0       7       0       0       0
  2709 ;;Total ram usage:        7 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 2
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_digit_split_a
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function ___awmod
  2721  0477                     ___awmod:
  2722                           
  2723                           ;incstack = 0
  2724                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2725  0477  01CC               	clrf	___awmod@sign
  2726  0478  1FC9               	btfss	___awmod@dividend+1,7
  2727  0479  2C81               	goto	l1404
  2728  047A  09C8               	comf	___awmod@dividend,f
  2729  047B  09C9               	comf	___awmod@dividend+1,f
  2730  047C  0AC8               	incf	___awmod@dividend,f
  2731  047D  1903               	skipnz
  2732  047E  0AC9               	incf	___awmod@dividend+1,f
  2733  047F  01CC               	clrf	___awmod@sign
  2734  0480  0ACC               	incf	___awmod@sign,f
  2735  0481                     l1404:
  2736  0481  1FC7               	btfss	___awmod@divisor+1,7
  2737  0482  2C88               	goto	l1408
  2738  0483  09C6               	comf	___awmod@divisor,f
  2739  0484  09C7               	comf	___awmod@divisor+1,f
  2740  0485  0AC6               	incf	___awmod@divisor,f
  2741  0486  1903               	skipnz
  2742  0487  0AC7               	incf	___awmod@divisor+1,f
  2743  0488                     l1408:
  2744  0488  0846               	movf	___awmod@divisor,w
  2745  0489  0447               	iorwf	___awmod@divisor+1,w
  2746  048A  1903               	btfsc	3,2
  2747  048B  2CB5               	goto	l1426
  2748  048C  01CB               	clrf	___awmod@counter
  2749  048D  0ACB               	incf	___awmod@counter,f
  2750  048E                     l1416:
  2751  048E  1BC7               	btfsc	___awmod@divisor+1,7
  2752  048F  2C9C               	goto	l1418
  2753  0490  3001               	movlw	1
  2754  0491                     u715:
  2755  0491  1003               	clrc
  2756  0492  0DC6               	rlf	___awmod@divisor,f
  2757  0493  0DC7               	rlf	___awmod@divisor+1,f
  2758  0494  3EFF               	addlw	-1
  2759  0495  1D03               	skipz
  2760  0496  2C91               	goto	u715
  2761  0497  3001               	movlw	1
  2762  0498  00CA               	movwf	??___awmod
  2763  0499  084A               	movf	??___awmod,w
  2764  049A  07CB               	addwf	___awmod@counter,f
  2765  049B  2C8E               	goto	l1416
  2766  049C                     l1418:
  2767  049C  0847               	movf	___awmod@divisor+1,w
  2768  049D  0249               	subwf	___awmod@dividend+1,w
  2769  049E  1D03               	skipz
  2770  049F  2CA2               	goto	u735
  2771  04A0  0846               	movf	___awmod@divisor,w
  2772  04A1  0248               	subwf	___awmod@dividend,w
  2773  04A2                     u735:
  2774  04A2  1C03               	skipc
  2775  04A3  2CAA               	goto	l1422
  2776  04A4  0846               	movf	___awmod@divisor,w
  2777  04A5  02C8               	subwf	___awmod@dividend,f
  2778  04A6  0847               	movf	___awmod@divisor+1,w
  2779  04A7  1C03               	skipc
  2780  04A8  03C9               	decf	___awmod@dividend+1,f
  2781  04A9  02C9               	subwf	___awmod@dividend+1,f
  2782  04AA                     l1422:
  2783  04AA  3001               	movlw	1
  2784  04AB                     u745:
  2785  04AB  1003               	clrc
  2786  04AC  0CC7               	rrf	___awmod@divisor+1,f
  2787  04AD  0CC6               	rrf	___awmod@divisor,f
  2788  04AE  3EFF               	addlw	-1
  2789  04AF  1D03               	skipz
  2790  04B0  2CAB               	goto	u745
  2791  04B1  3001               	movlw	1
  2792  04B2  02CB               	subwf	___awmod@counter,f
  2793  04B3  1D03               	btfss	3,2
  2794  04B4  2C9C               	goto	l1418
  2795  04B5                     l1426:
  2796  04B5  084C               	movf	___awmod@sign,w
  2797  04B6  1903               	btfsc	3,2
  2798  04B7  2CBD               	goto	l1430
  2799  04B8  09C8               	comf	___awmod@dividend,f
  2800  04B9  09C9               	comf	___awmod@dividend+1,f
  2801  04BA  0AC8               	incf	___awmod@dividend,f
  2802  04BB  1903               	skipnz
  2803  04BC  0AC9               	incf	___awmod@dividend+1,f
  2804  04BD                     l1430:
  2805  04BD  0849               	movf	___awmod@dividend+1,w
  2806  04BE  00C7               	movwf	?___awmod+1
  2807  04BF  0848               	movf	___awmod@dividend,w
  2808  04C0  00C6               	movwf	?___awmod
  2809  04C1  0008               	return
  2810  04C2                     __end_of___awmod:
  2811                           
  2812                           	psect	text16
  2813  037C                     __ptext16:	
  2814 ;; *************** function ___awdiv *****************
  2815 ;; Defined at:
  2816 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  divisor         2    6[BANK0 ] int 
  2819 ;;  dividend        2    8[BANK0 ] int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  quotient        2   13[BANK0 ] int 
  2822 ;;  sign            1   12[BANK0 ] unsigned char 
  2823 ;;  counter         1   11[BANK0 ] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  2    6[BANK0 ] int 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0
  2828 ;; Tracked objects:
  2829 ;;		On entry : 300/0
  2830 ;;		On exit  : 300/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       4       0       0       0
  2834 ;;      Locals:         0       4       0       0       0
  2835 ;;      Temps:          0       1       0       0       0
  2836 ;;      Totals:         0       9       0       0       0
  2837 ;;Total ram usage:        9 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 2
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;;		_digit_split_a
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function ___awdiv
  2850  037C                     ___awdiv:
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2854  037C  01D2               	clrf	___awdiv@sign
  2855  037D  1FCD               	btfss	___awdiv@divisor+1,7
  2856  037E  2B86               	goto	l1360
  2857  037F  09CC               	comf	___awdiv@divisor,f
  2858  0380  09CD               	comf	___awdiv@divisor+1,f
  2859  0381  0ACC               	incf	___awdiv@divisor,f
  2860  0382  1903               	skipnz
  2861  0383  0ACD               	incf	___awdiv@divisor+1,f
  2862  0384  01D2               	clrf	___awdiv@sign
  2863  0385  0AD2               	incf	___awdiv@sign,f
  2864  0386                     l1360:
  2865  0386  1FCF               	btfss	___awdiv@dividend+1,7
  2866  0387  2B91               	goto	l1366
  2867  0388  09CE               	comf	___awdiv@dividend,f
  2868  0389  09CF               	comf	___awdiv@dividend+1,f
  2869  038A  0ACE               	incf	___awdiv@dividend,f
  2870  038B  1903               	skipnz
  2871  038C  0ACF               	incf	___awdiv@dividend+1,f
  2872  038D  3001               	movlw	1
  2873  038E  00D0               	movwf	??___awdiv
  2874  038F  0850               	movf	??___awdiv,w
  2875  0390  06D2               	xorwf	___awdiv@sign,f
  2876  0391                     l1366:
  2877  0391  01D3               	clrf	___awdiv@quotient
  2878  0392  01D4               	clrf	___awdiv@quotient+1
  2879  0393  084C               	movf	___awdiv@divisor,w
  2880  0394  044D               	iorwf	___awdiv@divisor+1,w
  2881  0395  1903               	btfsc	3,2
  2882  0396  2BC8               	goto	l1388
  2883  0397  01D1               	clrf	___awdiv@counter
  2884  0398  0AD1               	incf	___awdiv@counter,f
  2885  0399                     l1376:
  2886  0399  1BCD               	btfsc	___awdiv@divisor+1,7
  2887  039A  2BA7               	goto	l1378
  2888  039B  3001               	movlw	1
  2889  039C                     u615:
  2890  039C  1003               	clrc
  2891  039D  0DCC               	rlf	___awdiv@divisor,f
  2892  039E  0DCD               	rlf	___awdiv@divisor+1,f
  2893  039F  3EFF               	addlw	-1
  2894  03A0  1D03               	skipz
  2895  03A1  2B9C               	goto	u615
  2896  03A2  3001               	movlw	1
  2897  03A3  00D0               	movwf	??___awdiv
  2898  03A4  0850               	movf	??___awdiv,w
  2899  03A5  07D1               	addwf	___awdiv@counter,f
  2900  03A6  2B99               	goto	l1376
  2901  03A7                     l1378:
  2902  03A7  3001               	movlw	1
  2903  03A8                     u635:
  2904  03A8  1003               	clrc
  2905  03A9  0DD3               	rlf	___awdiv@quotient,f
  2906  03AA  0DD4               	rlf	___awdiv@quotient+1,f
  2907  03AB  3EFF               	addlw	-1
  2908  03AC  1D03               	skipz
  2909  03AD  2BA8               	goto	u635
  2910  03AE  084D               	movf	___awdiv@divisor+1,w
  2911  03AF  024F               	subwf	___awdiv@dividend+1,w
  2912  03B0  1D03               	skipz
  2913  03B1  2BB4               	goto	u645
  2914  03B2  084C               	movf	___awdiv@divisor,w
  2915  03B3  024E               	subwf	___awdiv@dividend,w
  2916  03B4                     u645:
  2917  03B4  1C03               	skipc
  2918  03B5  2BBD               	goto	l1384
  2919  03B6  084C               	movf	___awdiv@divisor,w
  2920  03B7  02CE               	subwf	___awdiv@dividend,f
  2921  03B8  084D               	movf	___awdiv@divisor+1,w
  2922  03B9  1C03               	skipc
  2923  03BA  03CF               	decf	___awdiv@dividend+1,f
  2924  03BB  02CF               	subwf	___awdiv@dividend+1,f
  2925  03BC  1453               	bsf	___awdiv@quotient,0
  2926  03BD                     l1384:
  2927  03BD  3001               	movlw	1
  2928  03BE                     u655:
  2929  03BE  1003               	clrc
  2930  03BF  0CCD               	rrf	___awdiv@divisor+1,f
  2931  03C0  0CCC               	rrf	___awdiv@divisor,f
  2932  03C1  3EFF               	addlw	-1
  2933  03C2  1D03               	skipz
  2934  03C3  2BBE               	goto	u655
  2935  03C4  3001               	movlw	1
  2936  03C5  02D1               	subwf	___awdiv@counter,f
  2937  03C6  1D03               	btfss	3,2
  2938  03C7  2BA7               	goto	l1378
  2939  03C8                     l1388:
  2940  03C8  0852               	movf	___awdiv@sign,w
  2941  03C9  1903               	btfsc	3,2
  2942  03CA  2BD0               	goto	l1392
  2943  03CB  09D3               	comf	___awdiv@quotient,f
  2944  03CC  09D4               	comf	___awdiv@quotient+1,f
  2945  03CD  0AD3               	incf	___awdiv@quotient,f
  2946  03CE  1903               	skipnz
  2947  03CF  0AD4               	incf	___awdiv@quotient+1,f
  2948  03D0                     l1392:
  2949  03D0  0854               	movf	___awdiv@quotient+1,w
  2950  03D1  00CD               	movwf	?___awdiv+1
  2951  03D2  0853               	movf	___awdiv@quotient,w
  2952  03D3  00CC               	movwf	?___awdiv
  2953  03D4  0008               	return
  2954  03D5                     __end_of___awdiv:
  2955                           
  2956                           	psect	text17
  2957  04C2                     __ptext17:	
  2958 ;; *************** function _adc *****************
  2959 ;; Defined at:
  2960 ;;		line 59 in file "incubator.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  input           1    wreg     unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  input           1   15[BANK0 ] unsigned char 
  2965 ;;  output          2   13[BANK0 ] int 
  2966 ;;  b               2   11[BANK0 ] int 
  2967 ;;  a               2    9[BANK0 ] int 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      unsigned char 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/100
  2974 ;;		On exit  : 300/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         0       0       0       0       0
  2978 ;;      Locals:         0       7       0       0       0
  2979 ;;      Temps:          0       2       0       0       0
  2980 ;;      Totals:         0       9       0       0       0
  2981 ;;Total ram usage:        9 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 3
  2984 ;; This function calls:
  2985 ;;		_delay
  2986 ;; This function is called by:
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _adc
  2993  04C2                     _adc:
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _adc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2997                           ;adc@input stored from wreg
  2998  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2999  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3000  04C4  00D5               	movwf	adc@input
  3001                           
  3002                           ;incubator.c: 59: char adc(char input);incubator.c: 60: {;incubator.c: 61:     int a,b,o
      +                          utput;;incubator.c: 62:     ADCON0=input;
  3003  04C5  0855               	movf	adc@input,w
  3004  04C6  009F               	movwf	31	;volatile
  3005                           
  3006                           ;incubator.c: 63:     ADCON1=0x80;
  3007  04C7  3080               	movlw	128
  3008  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  3009  04C9  009F               	movwf	31	;volatile
  3010                           
  3011                           ;incubator.c: 64:     delay(50);
  3012  04CA  3032               	movlw	50
  3013  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3014  04CC  00C6               	movwf	delay@ms
  3015  04CD  3000               	movlw	0
  3016  04CE  00C7               	movwf	delay@ms+1
  3017  04CF  120A  118A  2558  120A  118A  	fcall	_delay
  3018                           
  3019                           ;incubator.c: 65:     GO=1;
  3020  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  3021  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  3022  04D6  149F               	bsf	31,1	;volatile
  3023  04D7                     l116:	
  3024                           ;incubator.c: 66:     while(GO==1);
  3025                           
  3026  04D7  189F               	btfsc	31,1	;volatile
  3027  04D8  2CD7               	goto	l116
  3028                           
  3029                           ;incubator.c: 69:     a=ADRESL;
  3030  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  3031  04DA  081E               	movf	30,w	;volatile
  3032  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3033  04DC  00CD               	movwf	??_adc
  3034  04DD  01CE               	clrf	??_adc+1
  3035  04DE  084D               	movf	??_adc,w
  3036  04DF  00CF               	movwf	adc@a
  3037  04E0  084E               	movf	??_adc+1,w
  3038  04E1  00D0               	movwf	adc@a+1
  3039                           
  3040                           ;incubator.c: 70:     b=ADRESH;
  3041  04E2  081E               	movf	30,w	;volatile
  3042  04E3  00CD               	movwf	??_adc
  3043  04E4  01CE               	clrf	??_adc+1
  3044  04E5  084D               	movf	??_adc,w
  3045  04E6  00D1               	movwf	adc@b
  3046  04E7  084E               	movf	??_adc+1,w
  3047  04E8  00D2               	movwf	adc@b+1
  3048                           
  3049                           ;incubator.c: 73:     output = (b<<8)|a;
  3050  04E9  0852               	movf	adc@b+1,w
  3051  04EA  00CE               	movwf	??_adc+1
  3052  04EB  0851               	movf	adc@b,w
  3053  04EC  00CD               	movwf	??_adc
  3054  04ED  084D               	movf	??_adc,w
  3055  04EE  00CE               	movwf	??_adc+1
  3056  04EF  01CD               	clrf	??_adc
  3057  04F0  084F               	movf	adc@a,w
  3058  04F1  044D               	iorwf	??_adc,w
  3059  04F2  00D3               	movwf	adc@output
  3060  04F3  0850               	movf	adc@a+1,w
  3061  04F4  044E               	iorwf	??_adc+1,w
  3062  04F5  00D4               	movwf	adc@output+1
  3063                           
  3064                           ;incubator.c: 74:     return output;
  3065  04F6  0853               	movf	adc@output,w
  3066  04F7  0008               	return
  3067  04F8                     __end_of_adc:
  3068                           
  3069                           	psect	text18
  3070  0558                     __ptext18:	
  3071 ;; *************** function _delay *****************
  3072 ;; Defined at:
  3073 ;;		line 3 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  ms              2    0[BANK0 ] int 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  j               2    5[BANK0 ] int 
  3078 ;;  i               2    3[BANK0 ] int 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, btemp+1
  3083 ;; Tracked objects:
  3084 ;;		On entry : 300/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       2       0       0       0
  3089 ;;      Locals:         0       4       0       0       0
  3090 ;;      Temps:          0       1       0       0       0
  3091 ;;      Totals:         0       7       0       0       0
  3092 ;;Total ram usage:        7 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 2
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_adc
  3099 ;;		_gsm_msg
  3100 ;;		_lcd_enable
  3101 ;;		_lcd_command
  3102 ;;		_lcd_data
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _delay
  3108  0558                     _delay:
  3109                           
  3110                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 3: void delay(int ms);../../../LCD_
      +                          driver/LCD_driver.X/Lcd_16x2_Driver.c: 4: {;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Dr
      +                          iver.c: 5:     int i,j;;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 6:     for(i
      +                          =0;i<ms;i++)
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  3114  0558  01C9               	clrf	delay@i
  3115  0559  01CA               	clrf	delay@i+1
  3116  055A                     l160:
  3117  055A  084A               	movf	delay@i+1,w
  3118  055B  3A80               	xorlw	128
  3119  055C  00C8               	movwf	??_delay
  3120  055D  0847               	movf	delay@ms+1,w
  3121  055E  3A80               	xorlw	128
  3122  055F  0248               	subwf	??_delay,w
  3123  0560  1D03               	skipz
  3124  0561  2D64               	goto	u495
  3125  0562  0846               	movf	delay@ms,w
  3126  0563  0249               	subwf	delay@i,w
  3127  0564                     u495:
  3128  0564  1803               	btfsc	3,0
  3129  0565  0008               	return
  3130                           
  3131                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 7:     {;../../../LCD_driver/LCD_dr
      +                          iver.X/Lcd_16x2_Driver.c: 8:         for(j=0;j<1000;j++);
  3132  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0567  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0568  01CB               	clrf	delay@j
  3135  0569  01CC               	clrf	delay@j+1
  3136  056A                     l1274:
  3137  056A  3001               	movlw	1
  3138  056B  1283               	bcf	3,5	;RP0=0, select bank0
  3139  056C  1303               	bcf	3,6	;RP1=0, select bank0
  3140  056D  07CB               	addwf	delay@j,f
  3141  056E  1803               	skipnc
  3142  056F  0ACC               	incf	delay@j+1,f
  3143  0570  3000               	movlw	0
  3144  0571  07CC               	addwf	delay@j+1,f
  3145  0572  084C               	movf	delay@j+1,w
  3146  0573  3A80               	xorlw	128
  3147  0574  00FF               	movwf	127
  3148  0575  3083               	movlw	131
  3149  0576  027F               	subwf	127,w
  3150  0577  1D03               	skipz
  3151  0578  2D7B               	goto	u485
  3152  0579  30E8               	movlw	232
  3153  057A  024B               	subwf	delay@j,w
  3154  057B                     u485:
  3155  057B  1C03               	skipc
  3156  057C  2D6A               	goto	l1274
  3157                           
  3158                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 9:     }
  3159  057D  3001               	movlw	1
  3160  057E  1283               	bcf	3,5	;RP0=0, select bank0
  3161  057F  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0580  07C9               	addwf	delay@i,f
  3163  0581  1803               	skipnc
  3164  0582  0ACA               	incf	delay@i+1,f
  3165  0583  3000               	movlw	0
  3166  0584  07CA               	addwf	delay@i+1,f
  3167  0585  2D5A               	goto	l160
  3168  0586                     __end_of_delay:
  3169                           
  3170                           	psect	text19
  3171  05FD                     __ptext19:	
  3172 ;; *************** function ___wmul *****************
  3173 ;; Defined at:
  3174 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3177 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  product         2    4[BANK0 ] unsigned int 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2    0[BANK0 ] unsigned int 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 300/0
  3186 ;;		On exit  : 300/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       4       0       0       0
  3190 ;;      Locals:         0       2       0       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         0       6       0       0       0
  3193 ;;Total ram usage:        6 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 2
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function ___wmul
  3205  05FD                     ___wmul:
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3209  05FD  01CA               	clrf	___wmul@product
  3210  05FE  01CB               	clrf	___wmul@product+1
  3211  05FF                     l1542:
  3212  05FF  1C46               	btfss	___wmul@multiplier,0
  3213  0600  2E07               	goto	l314
  3214  0601  0848               	movf	___wmul@multiplicand,w
  3215  0602  07CA               	addwf	___wmul@product,f
  3216  0603  1803               	skipnc
  3217  0604  0ACB               	incf	___wmul@product+1,f
  3218  0605  0849               	movf	___wmul@multiplicand+1,w
  3219  0606  07CB               	addwf	___wmul@product+1,f
  3220  0607                     l314:
  3221  0607  3001               	movlw	1
  3222  0608                     u815:
  3223  0608  1003               	clrc
  3224  0609  0DC8               	rlf	___wmul@multiplicand,f
  3225  060A  0DC9               	rlf	___wmul@multiplicand+1,f
  3226  060B  3EFF               	addlw	-1
  3227  060C  1D03               	skipz
  3228  060D  2E08               	goto	u815
  3229  060E  3001               	movlw	1
  3230  060F                     u825:
  3231  060F  1003               	clrc
  3232  0610  0CC7               	rrf	___wmul@multiplier+1,f
  3233  0611  0CC6               	rrf	___wmul@multiplier,f
  3234  0612  3EFF               	addlw	-1
  3235  0613  1D03               	skipz
  3236  0614  2E0F               	goto	u825
  3237  0615  0846               	movf	___wmul@multiplier,w
  3238  0616  0447               	iorwf	___wmul@multiplier+1,w
  3239  0617  1D03               	btfss	3,2
  3240  0618  2DFF               	goto	l1542
  3241  0619  084B               	movf	___wmul@product+1,w
  3242  061A  00C7               	movwf	?___wmul+1
  3243  061B  084A               	movf	___wmul@product,w
  3244  061C  00C6               	movwf	?___wmul
  3245  061D  0008               	return
  3246  061E                     __end_of___wmul:
  3247                           
  3248                           	psect	text20
  3249  0586                     __ptext20:	
  3250 ;; *************** function _timer *****************
  3251 ;; Defined at:
  3252 ;;		line 84 in file "incubator.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 300/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0
  3268 ;;      Temps:          3       0       0       0       0
  3269 ;;      Totals:         3       0       0       0       0
  3270 ;;Total ram usage:        3 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 1
  3273 ;; This function calls:
  3274 ;;		i1_delay
  3275 ;; This function is called by:
  3276 ;;		Interrupt level 1
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _timer
  3282  0586                     _timer:
  3283                           
  3284                           ;incubator.c: 86:     count++;
  3285  0586  3001               	movlw	1
  3286  0587  07FA               	addwf	_count,f
  3287  0588  1803               	skipnc
  3288  0589  0AFB               	incf	_count+1,f
  3289  058A  3000               	movlw	0
  3290  058B  07FB               	addwf	_count+1,f
  3291                           
  3292                           ;incubator.c: 87:     TMR1IF=0;
  3293  058C  100C               	bcf	12,0	;volatile
  3294                           
  3295                           ;incubator.c: 89:     if(count>1*60*2)
  3296  058D  087B               	movf	_count+1,w
  3297  058E  3A80               	xorlw	128
  3298  058F  00FF               	movwf	127
  3299  0590  3080               	movlw	128
  3300  0591  027F               	subwf	127,w
  3301  0592  1D03               	skipz
  3302  0593  2D96               	goto	u86_25
  3303  0594  3079               	movlw	121
  3304  0595  027A               	subwf	_count,w
  3305  0596                     u86_25:
  3306  0596  1C03               	skipc
  3307  0597  2DA6               	goto	i1l1580
  3308                           
  3309                           ;incubator.c: 90:     {;incubator.c: 91:         RA3=1;
  3310  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0599  1303               	bcf	3,6	;RP1=0, select bank0
  3312  059A  1585               	bsf	5,3	;volatile
  3313                           
  3314                           ;incubator.c: 92:         delay(100);
  3315  059B  3064               	movlw	100
  3316  059C  00F0               	movwf	i1delay@ms
  3317  059D  3000               	movlw	0
  3318  059E  00F1               	movwf	i1delay@ms+1
  3319  059F  120A  118A  25B2  120A  118A  	fcall	i1_delay
  3320                           
  3321                           ;incubator.c: 95:         count=0;
  3322  05A4  01FA               	clrf	_count
  3323  05A5  01FB               	clrf	_count+1
  3324  05A6                     i1l1580:
  3325                           
  3326                           ;incubator.c: 97:     RA3=0;
  3327  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  3328  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  3329  05A8  1185               	bcf	5,3	;volatile
  3330  05A9  0879               	movf	??_timer+2,w
  3331  05AA  00FF               	movwf	127
  3332  05AB  0878               	movf	??_timer+1,w
  3333  05AC  008A               	movwf	10
  3334  05AD  0E77               	swapf	??_timer,w
  3335  05AE  0083               	movwf	3
  3336  05AF  0EFE               	swapf	126,f
  3337  05B0  0E7E               	swapf	126,w
  3338  05B1  0009               	retfie
  3339  05B2                     __end_of_timer:
  3340                           
  3341                           	psect	intentry
  3342  0004                     __pintentry:	
  3343                           ;incstack = 0
  3344                           ; Regs used in _timer: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3345                           
  3346  0004                     interrupt_function:
  3347  007E                     saved_w	set	btemp
  3348  0004  00FE               	movwf	btemp
  3349  0005  0E03               	swapf	3,w
  3350  0006  00F7               	movwf	??_timer
  3351  0007  080A               	movf	10,w
  3352  0008  00F8               	movwf	??_timer+1
  3353  0009  1283               	bcf	3,5	;RP0=0, select bank0
  3354  000A  1303               	bcf	3,6	;RP1=0, select bank0
  3355  000B  087F               	movf	btemp+1,w
  3356  000C  00F9               	movwf	??_timer+2
  3357  000D  120A  118A  2D86   	ljmp	_timer
  3358                           
  3359                           	psect	text21
  3360  05B2                     __ptext21:	
  3361 ;; *************** function i1_delay *****************
  3362 ;; Defined at:
  3363 ;;		line 3 in file "../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  ms              2    0[COMMON] int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  j               2    5[COMMON] int 
  3368 ;;  i               2    3[COMMON] int 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, btemp+1
  3373 ;; Tracked objects:
  3374 ;;		On entry : 300/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3378 ;;      Params:         2       0       0       0       0
  3379 ;;      Locals:         4       0       0       0       0
  3380 ;;      Temps:          1       0       0       0       0
  3381 ;;      Totals:         7       0       0       0       0
  3382 ;;Total ram usage:        7 bytes
  3383 ;; Hardware stack levels used: 1
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_timer
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function i1_delay
  3393  05B2                     i1_delay:
  3394                           
  3395                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 3: void delay(int ms);../../../LCD_
      +                          driver/LCD_driver.X/Lcd_16x2_Driver.c: 4: {;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Dr
      +                          iver.c: 5:     int i,j;;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 6:     for(i
      +                          =0;i<ms;i++)
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in i1_delay: [wreg+status,2+btemp+1]
  3399  05B2  01F3               	clrf	i1delay@i
  3400  05B3  01F4               	clrf	i1delay@i+1
  3401  05B4                     i1l160:
  3402  05B4  0874               	movf	i1delay@i+1,w
  3403  05B5  3A80               	xorlw	128
  3404  05B6  00F2               	movwf	??i1_delay
  3405  05B7  0871               	movf	i1delay@ms+1,w
  3406  05B8  3A80               	xorlw	128
  3407  05B9  0272               	subwf	??i1_delay,w
  3408  05BA  1D03               	skipz
  3409  05BB  2DBE               	goto	u85_25
  3410  05BC  0870               	movf	i1delay@ms,w
  3411  05BD  0273               	subwf	i1delay@i,w
  3412  05BE                     u85_25:
  3413  05BE  1803               	btfsc	3,0
  3414  05BF  0008               	return
  3415                           
  3416                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 7:     {;../../../LCD_driver/LCD_dr
      +                          iver.X/Lcd_16x2_Driver.c: 8:         for(j=0;j<1000;j++);
  3417  05C0  01F5               	clrf	i1delay@j
  3418  05C1  01F6               	clrf	i1delay@j+1
  3419  05C2                     i1l1562:
  3420  05C2  3001               	movlw	1
  3421  05C3  07F5               	addwf	i1delay@j,f
  3422  05C4  1803               	skipnc
  3423  05C5  0AF6               	incf	i1delay@j+1,f
  3424  05C6  3000               	movlw	0
  3425  05C7  07F6               	addwf	i1delay@j+1,f
  3426  05C8  0876               	movf	i1delay@j+1,w
  3427  05C9  3A80               	xorlw	128
  3428  05CA  00FF               	movwf	127
  3429  05CB  3083               	movlw	131
  3430  05CC  027F               	subwf	127,w
  3431  05CD  1D03               	skipz
  3432  05CE  2DD1               	goto	u84_25
  3433  05CF  30E8               	movlw	232
  3434  05D0  0275               	subwf	i1delay@j,w
  3435  05D1                     u84_25:
  3436  05D1  1C03               	skipc
  3437  05D2  2DC2               	goto	i1l1562
  3438                           
  3439                           ;../../../LCD_driver/LCD_driver.X/Lcd_16x2_Driver.c: 9:     }
  3440  05D3  3001               	movlw	1
  3441  05D4  07F3               	addwf	i1delay@i,f
  3442  05D5  1803               	skipnc
  3443  05D6  0AF4               	incf	i1delay@i+1,f
  3444  05D7  3000               	movlw	0
  3445  05D8  07F4               	addwf	i1delay@i+1,f
  3446  05D9  2DB4               	goto	i1l160
  3447  05DA                     __end_ofi1_delay:
  3448  007E                     btemp	set	126	;btemp
  3449  007E                     wtemp0	set	126
  3450                           
  3451                           	psect	config
  3452                           
  3453                           ;Config register CONFIG1 @ 0x2007
  3454                           ;	Oscillator Selection bits
  3455                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3456                           ;	Watchdog Timer Enable bit
  3457                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3458                           ;	Power-up Timer Enable bit
  3459                           ;	PWRTE = ON, PWRT enabled
  3460                           ;	RE3/MCLR pin function select bit
  3461                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3462                           ;	Code Protection bit
  3463                           ;	CP = OFF, Program memory code protection is disabled
  3464                           ;	Data Code Protection bit
  3465                           ;	CPD = OFF, Data memory code protection is disabled
  3466                           ;	Brown Out Reset Selection bits
  3467                           ;	BOREN = OFF, BOR disabled
  3468                           ;	Internal External Switchover bit
  3469                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3470                           ;	Fail-Safe Clock Monitor Enabled bit
  3471                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3472                           ;	Low Voltage Programming Enable bit
  3473                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3474                           ;	In-Circuit Debugger Mode bit
  3475                           ;	DEBUG = 0x1, unprogrammed default
  3476  2007                     	org	8199
  3477  2007  2CE4               	dw	11492

Data Sizes:
    Strings     74
    Constant    0
    Data        2
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     30      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    digit_split_a@b	PTR unsigned char  size(1) Largest target is 10
		 -> intensity(BANK0[10]), humidity(BANK0[10]), temperature(BANK0[4]), 

    string_rev@a	PTR unsigned char  size(1) Largest target is 10
		 -> intensity(BANK0[10]), humidity(BANK0[10]), temperature(BANK0[4]), 

    lcd_string@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[4]), STR_2(CODE[3]), STR_1(CODE[2]), intensity(BANK0[10]), 
		 -> humidity(BANK0[10]), temperature(BANK0[4]), 

    transmit_string@a	PTR unsigned char  size(2) Largest target is 24
		 -> STR_10(CODE[3]), STR_9(CODE[10]), STR_8(CODE[12]), STR_7(CODE[6]), 
		 -> STR_6(CODE[24]), STR_5(CODE[10]), STR_4(CODE[3]), humidity(BANK0[10]), 
		 -> temperature(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _timer in COMMON

    _timer->i1_delay

Critical Paths under _main in BANK0

    _main->_digit_split_a
    _lcd_string->_lcd_data
    _lcd_data->_delay
    _lcd_initialize->_lcd_position
    _lcd_position->_lcd_command
    _lcd_displayon_cursoron->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_delay
    _lcd_enable->_delay
    _gsm_msg->_delay
    _digit_split_a->_string_rev
    ___awdiv->___wmul
    _adc->_delay

Critical Paths under _timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   24757
                                             26 BANK0      4     4      0
                            ___awdiv
                             ___wmul
                                _adc
                      _digit_split_a
                            _gsm_msg
                          _lcd_clear
                     _lcd_initialize
                       _lcd_position
                         _lcd_string
                      _timer1_config
 ---------------------------------------------------------------------------------
 (1) _timer1_config                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           2     0      2    2957
                                             10 BANK0      2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0    2456
                                              7 BANK0      3     3      0
                              _delay
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       0     0      0    8650
                        _lcd_command
             _lcd_displayon_cursoron
                       _lcd_position
 ---------------------------------------------------------------------------------
 (1) _lcd_position                                         4     0      4    3738
                                             10 BANK0      4     0      4
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_displayon_cursoron                               0     0      0    2456
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0    2456
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0    2456
                                              7 BANK0      3     3      0
                              _delay
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_enable                                           0     0      0    1206
                              _delay
 ---------------------------------------------------------------------------------
 (1) _gsm_msg                                              0     0      0    1957
                              _delay
                      _transmit_data
                    _transmit_string
 ---------------------------------------------------------------------------------
 (2) _transmit_string                                      2     0      2     729
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _transmit_data                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _digit_split_a                                        9     7      2    2222
                                             17 BANK0      9     7      2
                            ___awdiv
                            ___awmod
                         _string_rev
 ---------------------------------------------------------------------------------
 (2) _string_rev                                          17    17      0     331
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc                                                  9     9      0    1297
                                              7 BANK0      9     9      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                7     5      2    1206
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _timer                                                3     3      0     118
                                              7 COMMON     3     3      0
                            i1_delay
 ---------------------------------------------------------------------------------
 (7) i1_delay                                              7     5      2     118
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _adc
     _delay
   _digit_split_a
     ___awdiv
     ___awmod
     _string_rev
   _gsm_msg
     _delay
     _transmit_data
     _transmit_string
   _lcd_clear
     _lcd_command
       _delay
       _lcd_enable
         _delay
   _lcd_initialize
     _lcd_command
     _lcd_displayon_cursoron
       _lcd_command
     _lcd_position
       _lcd_command
   _lcd_position
   _lcd_string
     _lcd_data
       _delay
       _lcd_enable
   _timer1_config

 _timer (ROOT)
   i1_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      54      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 08 14:44:18 2022

                              pc 0002                               l97 069C                               _GO 00F9  
                   _out_humidity 0020                     ___awdiv@sign 0052                               fsr 0004  
            ___wmul@multiplicand 0048                    ?_lcd_position 0050                              l105 063A  
                            l116 04D7                              l134 00A2                              l160 055A  
                            l137 01D6                              l314 0607                              l192 0677  
                            _RA3 002B                              _RD0 0040                              _RD1 0041  
                            _RE0 0048                              _RE1 0049                              _RE2 004A  
                            u505 0510                              u615 039C                              u545 053F  
                            u635 03A8                              u715 0491                              u485 057B  
                            u645 03B4                              u815 0608                              u495 0564  
                            u655 03BE                              u735 04A2                              u825 060F  
                            u745 04AB                              u905 00BF                              u915 01D0  
                            u935 01E8                              u785 03E1                              u875 009D  
                            u895 00AF                              _adc 04C2                              _hum 002A  
                            fsr0 0004                              indf 0000                     ___awmod@sign 004C  
                   lcd_command@a 004F                             ?_adc 0070                             l1302 061E  
                           l1312 066A                             l1306 065E                             l1404 0481  
                           l1332 042B                             l1308 0664                             l1430 04BD  
                           l1422 04AA                             l1350 045E                             l1342 0441  
                           l1334 043B                             l1360 0386                             l1416 048E  
                           l1408 0488                             l1344 045C                             l1274 056A  
                           l1418 049C                             l1426 04B5                             l1620 00B4  
                           l1604 005C                             l1542 05FF                             l1366 0391  
                           l1392 03D0                             l1384 03BD                             l1376 0399  
                           l1536 05DA                             l1624 00C4                             l1378 03A7  
                           l1466 03D8                             l1388 03C8                             l1468 0419  
                           l1708 066F                             l1670 01D9                             l1686 020E  
                           STR_1 037A                             STR_2 0374                             STR_3 0370  
                           STR_4 0377                             STR_5 0356                             STR_6 0332  
                           STR_7 036A                             STR_8 034A                             STR_9 0360  
                           _PIE1 008C                             _TXIF 0064                             adc@a 004F  
                           adc@b 0051                             _flag 0064                             _main 002E  
                           _temp 0028                             btemp 007E                             _volt 007C  
                __end_ofi1_delay 05DA                             start 0010                      lcd_string@a 0050  
                          ??_adc 004D                   ??_lcd_position 0054                            ?_main 0070  
                __end_of___awdiv 03D5                            STR_10 0374                  __end_of___awmod 04C2  
                          _ANSEL 0188                  ___awdiv@divisor 004C                            _T1CON 0010  
                          i1l160 05B4                  ___awdiv@counter 0051                            _RCSTA 0018  
                          _SPBRG 0099                            _PORTA 0005                            _PORTB 0006  
                          _PORTC 0007                            _PORTD 0008                            _PORTE 0009  
                  _transmit_data 0697                            _TRISA 0085                            _TRISB 0086  
                          _TRISC 0087                            _TRISD 0088                            _TRISE 0089  
                          u84_25 05D1                            u85_25 05BE                            u86_25 0596  
                          _TXREG 0019                            _TXSTA 0098                            _delay 0558  
                          _count 007A                            _light 0026                  __end_of_gsm_msg 0322  
                          _timer 0586                            pclath 000A                            status 0003  
                          wtemp0 007E                  __initialization 0013                     __end_of_main 0213  
              ??_transmit_string 0048                           ??_main 0060                   ?_transmit_data 0070  
       ??_lcd_displayon_cursoron 0050                           ?_delay 0046                           _ADCON0 001F  
                         _ADCON1 009F                           _ADRESH 001E                           _ADRESL 009E  
               ___awdiv@dividend 004E                           ?_timer 0070                           _ANSELH 0189  
                      ??i1_delay 0072                           i1l1562 05C2                           i1l1580 05A6  
                         _INTCON 000B                           _TMR1IF 0060                 digit_split_a@mod 005B  
               __end_of_lcd_data 0558             __size_of_lcd_command 0031                           ___wmul 05FD  
                      ??___awdiv 0050                        ??___awmod 004A                           delay@i 0049  
                         delay@j 004B                 ___awdiv@quotient 0053                  ___awmod@divisor 0046  
                ___awmod@counter 004B                        ??_gsm_msg 004D                           saved_w 007E  
               ??_lcd_initialize 0054             __end_of_lcd_position 0678          __end_of__initialization 002A  
                 __pcstackCOMMON 0070                     __pidataBANK0 06B2                    __end_of_delay 0586  
                  __end_of_timer 05B2            __end_of_digit_split_a 0426                  ??_transmit_data 0046  
             __size_of_lcd_clear 0005            __end_of_timer1_config 0697  __size_of_lcd_displayon_cursoron 0005  
                        ??_delay 0048                          ??_timer 0077                       __pbssBANK0 0020  
                     __pmaintext 002E                          ?___wmul 0046                       __pintentry 0004  
                     _lcd_enable 0678                        ?_lcd_data 0070                       _lcd_string 05DA  
                     __stringtab 0322                          i1_delay 05B2                  _transmit_string 061E  
         _lcd_displayon_cursoron 06A8                __end_of_lcd_clear 06B2                          ___awdiv 037C  
                        ___awmod 0477                  __size_of___wmul 0021                          __ptext1 068D  
                        __ptext2 05DA                          __ptext3 0529                          __ptext4 063E  
                        __ptext5 065D                          __ptext6 06A8                          __ptext7 06AD  
                        __ptext8 04F8                          __ptext9 0678                     __size_of_adc 0036  
                        _gsm_msg 0213                          delay@ms 0046                 ___awmod@dividend 0048  
          __size_of_lcd_position 001B                       ??_lcd_data 004D                          clrloop0 06A1  
                        _voltage 0024             end_of_initialization 002A                     _lcd_position 065D  
                    ?_lcd_enable 0070          __end_of_transmit_string 063E                      ?_lcd_string 0050  
                  ??_lcd_command 004D                        i1delay@ms 0070                       _string_rev 0426  
                 __end_of___wmul 061E                   digit_split_a@a 0057                   digit_split_a@b 005F  
                 digit_split_a@i 005D              start_initialization 0013                      __end_of_adc 04F8  
            __size_of_lcd_enable 0015                         ??___wmul 004A              __end_of_lcd_command 0529  
                    __pdataBANK0 0064              __size_of_lcd_string 0023            __end_of_transmit_data 06A0  
                    __pbssCOMMON 007A                        ___latbits 0002                    __pcstackBANK0 0046  
               ?_transmit_string 0046                        adc@output 0053                         ?i1_delay 0070  
              __size_of_lcd_data 002F           __size_of_digit_split_a 0051          ?_lcd_displayon_cursoron 0070  
        __size_of_lcd_initialize 001F                      ?_string_rev 0070           __size_of_timer1_config 000A  
                       ?___awdiv 004C                         ?___awmod 0046                        _lcd_clear 06AD  
                      __pstrings 0322                        _h_voltage 0044                         ?_gsm_msg 0070  
                 __size_of_delay 002E                 transmit_string@a 0046                   __size_of_timer 002C  
 __end_of_lcd_displayon_cursoron 06AD                      string_rev@a 0054                      string_rev@b 0048  
                    string_rev@i 0055                      string_rev@j 0052                        _intensity 0036  
              interrupt_function 0004                   ___wmul@product 004A                        clear_ram0 06A0  
                    _lcd_command 04F8                       ?_lcd_clear 0070                        lcd_data@a 004F  
                  _digit_split_a 03D5                      __stringbase 0331                ___wmul@multiplier 0046  
             lcd_position@column 0052                     ??_lcd_enable 004D                         i1delay@i 0073  
                       i1delay@j 0075                    _timer1_config 068D                     ??_lcd_string 0052  
            __size_of_string_rev 0051                 __size_ofi1_delay 0028               __end_of_lcd_enable 068D  
               __size_of___awdiv 0059                 __size_of___awmod 004B               __end_of_lcd_string 05FD  
                 ?_digit_split_a 0057                         adc@input 0055               __end_of__stringtab 0332  
               __size_of_gsm_msg 010F                         _main$814 0062                   ?_timer1_config 0070  
                       __ptext10 0213                         __ptext11 061E                         __ptext20 0586  
                       __ptext12 0697                         __ptext21 05B2                         __ptext13 03D5  
                       __ptext14 0426                         __ptext15 0477                         __ptext16 037C  
                       __ptext17 04C2                         __ptext18 0558                         __ptext19 05FD  
                       _lcd_data 0529                  lcd_position@row 0050                    __size_of_main 01E5  
                       _humidity 002C                   _lcd_initialize 063E                         _out_temp 0022  
                    ??_lcd_clear 0050                         intlevel1 0000                   transmit_data@a 0046  
         __end_of_lcd_initialize 065D                        stringcode 032C                     ??_string_rev 0046  
                ??_digit_split_a 0059                      _temperature 0040                  ??_timer1_config 0046  
                       stringdir 032C                         stringtab 0322               __end_of_string_rev 0477  
                ?_lcd_initialize 0070                     ?_lcd_command 0070         __size_of_transmit_string 0020  
         __size_of_transmit_data 0009  
